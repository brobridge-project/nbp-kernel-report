[{"id":"1bd17114.208f7f","type":"tab","label":"Kernel to Report Gfactor","disabled":false,"info":""},{"id":"6d95478a.67aeb","type":"tab","label":"Kernel to Report Sinopac","disabled":false,"info":""},{"id":"3ca7bb40.2d0a8c","type":"tab","label":"Cache1","disabled":false,"info":""},{"id":"2629ed0c.d1be12","type":"tab","label":"Cache2","disabled":false,"info":""},{"id":"35b0806c.4ac0e8","type":"MSSQL-CN","tdsVersion":"7_4","name":"Report MSSQL","server":"{{{REPORT_DATABASE_HOST}}}","port":"{{{REPORT_DATABASE_PORT}}}","encyption":true,"trustServerCertificate":true,"database":"{{{REPORT_DATABASE_DB}}}","useUTC":true,"connectTimeout":"15000","requestTimeout":"15000","cancelTimeout":"5000","pool":"20","parseJSON":false,"enableArithAbort":true},{"id":"81898769.b5aff8","type":"nats-streaming-server","server":"gravity-kernel-nats","port":"4222","cluster":"external-stan"},{"id":"9610aff8.a70458","type":"redis-config","name":"redis-cluster:6379","options":"redis://redis-cluster:6379","cluster":false,"optionsType":"str"},{"id":"f04213fa.c22b48","type":"MSSQL-CN","tdsVersion":"7_4","name":"Cache1 MSSQL","server":"{{{CACHE1_DATABASE_HOST}}}","port":"{{{CACHE1_DATABASE_PORT}}}","encyption":true,"trustServerCertificate":true,"database":"{{{CACHE1_DATABASE_DB}}}","useUTC":true,"connectTimeout":"15000","requestTimeout":"15000","cancelTimeout":"5000","pool":"5","parseJSON":false,"enableArithAbort":true},{"id":"df7cc988.0601c8","type":"MSSQL-CN","tdsVersion":"7_4","name":"Kernel DB","server":"{{{KERNEL_DATABASE_HOST}}}","port":"{{{KERNEL_DATABASE_PORT}}}","encyption":true,"trustServerCertificate":true,"database":"{{{KERNEL_DATABASE_DB}}}","useUTC":true,"connectTimeout":"15000","requestTimeout":"15000","cancelTimeout":"5000","pool":"5","parseJSON":false,"enableArithAbort":true},{"id":"c1f5db04.657d","type":"MSSQL-CN","tdsVersion":"7_4","name":"Cache2 MSSQL","server":"{{{CACHE2_DATABASE_HOST}}}","port":"{{{CACHE2_DATABASE_PORT}}}","encyption":true,"trustServerCertificate":true,"database":"{{{CACHE2_DATABASE_DB}}}","useUTC":true,"connectTimeout":"15000","requestTimeout":"15000","cancelTimeout":"5000","pool":"5","parseJSON":false,"enableArithAbort":true},{"id":"fcaf454e.703438","type":"switch","z":"1bd17114.208f7f","name":"Check Created Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendProductInitialize","vt":"str"},{"t":"eq","v":"SendProductCreate","vt":"str"},{"t":"eq","v":"SendProductUpdate","vt":"str"},{"t":"eq","v":"SendProductDelete","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":800,"y":600,"wires":[["4271e50d.26fc84"],["4271e50d.26fc84"],["1dc61412.b5eba4"],["bc52838b.d5e9b8"]]},{"id":"697c97fa.1b2138","type":"json","z":"1bd17114.208f7f","name":"","property":"payload","action":"","pretty":false,"x":470,"y":2780,"wires":[["dd38db84.5c7468"]]},{"id":"1e9f3f82.f55ba8","type":"nats-streaming-subscribe","z":"1bd17114.208f7f","name":"SendRecordProduct Source","server":"81898769.b5aff8","channel":"rowData.source.SendRecordProduct","clientID":"kernel-atomic-002","start":"all","start_option":"","durable":true,"durable_name":"kernel-atomic-002","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":260,"y":1780,"wires":[["7d66714d.289108"]]},{"id":"7d66714d.289108","type":"json","z":"1bd17114.208f7f","name":"","property":"payload","action":"","pretty":false,"x":530,"y":1780,"wires":[["c12bb94e.9b3c3","e83d1682.49753"]]},{"id":"5591f647.5422","type":"json","z":"1bd17114.208f7f","name":"","property":"payload","action":"","pretty":false,"x":470,"y":600,"wires":[["fcaf454e.703438","dc53973e.f5c688"]]},{"id":"4271e50d.26fc84","type":"function","z":"1bd17114.208f7f","name":"Kernel Insert Send Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.create_user = convert_uuid(msg.payload.create_user)\nmsg.payload.update_user = convert_uuid(msg.payload.update_user)\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.completed_time = convert_datetime(msg.payload.completed_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.send_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1340,"y":380,"wires":[["7bb75ccb.d7040c","64941982.9705a"]]},{"id":"7bb75ccb.d7040c","type":"debug","z":"1bd17114.208f7f","name":"Debug Send Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1570,"y":300,"wires":[]},{"id":"ed9d9d47.4b7168","type":"debug","z":"1bd17114.208f7f","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2510,"y":320,"wires":[]},{"id":"b4445676.84ee2","type":"switch","z":"1bd17114.208f7f","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2260,"y":380,"wires":[["ed9d9d47.4b7168","50c5f02c.dcb34"],[]]},{"id":"952578f0.3398c8","type":"debug","z":"1bd17114.208f7f","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1840,"y":300,"wires":[]},{"id":"50c5f02c.dcb34","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"STAN ACK","x":2490,"y":380,"wires":[]},{"id":"dc53973e.f5c688","type":"debug","z":"1bd17114.208f7f","name":"Display Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":620,"y":500,"wires":[]},{"id":"c3ab2c7f.c0e76","type":"function","z":"1bd17114.208f7f","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB send table for Success, UID:\" + msg.send_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB send table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2040,"y":380,"wires":[["b4445676.84ee2","f04bf8df.312698"]]},{"id":"dca3a4e4.1ffa28","type":"MSSQL","z":"1bd17114.208f7f","mssqlCN":"35b0806c.4ac0e8","name":"Report Send Table MSSQL","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[send] \nSET    event_code = @event_code, \n       way_name = @way_name, \n       send_from = @send_from, \n       send_date = @send_date, \n       template_code = @template_code, \n       template_max_length = @template_max_length, \n       send_mode = @send_mode, \n       limit_mode = @limit_mode, \n       mod_reply = @mod_reply, \n       status = @status, \n       priority = @priority, \n       msg_type = @msg_type, \n       req_channel = @req_channel, \n       req_batch_id = @req_batch_id, \n       memo = @memo, \n       create_time = @create_time, \n       create_user = @create_user, \n       update_time = @update_time, \n       update_user = @update_user, \n       completed_time = @completed_time, \n       canceled_time = @canceled_time, \n       update_expired_time = @update_expired_time \nWHERE  uid = @uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"event_code","type":"VarChar(?)","valueType":"msg","value":"payload.event_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_from","type":"Int","valueType":"msg","value":"payload.send_from","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_date","type":"DateTime2","valueType":"msg","value":"payload.send_date","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"template_code","type":"VarChar(?)","valueType":"msg","value":"payload.template_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"template_max_length","type":"Int","valueType":"msg","value":"payload.template_max_length","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_mode","type":"Char","valueType":"msg","value":"payload.send_mode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"limit_mode","type":"TinyInt","valueType":"msg","value":"payload.limit_mode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"mod_reply","type":"TinyInt","valueType":"msg","value":"payload.mod_reply","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"priority","type":"Int","valueType":"msg","value":"payload.priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_type","type":"VarChar(?)","valueType":"msg","value":"payload.msg_type","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_channel","type":"VarChar(?)","valueType":"msg","value":"payload.req_channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"memo","type":"NVarChar(?)","valueType":"msg","value":"payload.memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_user","type":"VarChar(?)","valueType":"msg","value":"payload.create_user","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_user","type":"VarChar(?)","valueType":"msg","value":"payload.update_user","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"completed_time","type":"DateTime2","valueType":"msg","value":"payload.completed_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_batch_id","type":"VarChar(?)","valueType":"msg","value":"payload.batch_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1660,"y":600,"wires":[["7e34bd.0c58ab44","25375a57.850fa6"]]},{"id":"1dc61412.b5eba4","type":"function","z":"1bd17114.208f7f","name":"Kernel Send Update Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.create_user = convert_uuid(msg.payload.create_user)\nmsg.payload.update_user = convert_uuid(msg.payload.update_user)\n// msg.payload.send_time = convert_datetime(msg.payload.send_time)\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.completed_time = convert_datetime(msg.payload.completed_time)\n// msg.payload.expire_time = convert_datetime(msg.payload.expire_time)\n// msg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n// msg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.send_table_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1320,"y":600,"wires":[["dca3a4e4.1ffa28","9da3b90c.5f1fd8"]]},{"id":"9da3b90c.5f1fd8","type":"debug","z":"1bd17114.208f7f","name":"Debug Send Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1590,"y":520,"wires":[]},{"id":"63850e8e.1f0ea","type":"debug","z":"1bd17114.208f7f","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2410,"y":520,"wires":[]},{"id":"7d479a49.cc0b6c","type":"switch","z":"1bd17114.208f7f","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2160,"y":600,"wires":[["63850e8e.1f0ea","fdb900d.90ba78"],[]]},{"id":"25375a57.850fa6","type":"debug","z":"1bd17114.208f7f","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1860,"y":520,"wires":[]},{"id":"fdb900d.90ba78","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"STAN ACK","x":2410,"y":600,"wires":[]},{"id":"7e34bd.0c58ab44","type":"function","z":"1bd17114.208f7f","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DB send table success, UID:\" + msg.send_table_uid\n} else {\n    msg.result = \"[[GRAVITY][ATOMIC] Update Report DB send table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1900,"y":600,"wires":[["7d479a49.cc0b6c","fa82e627.4cba3"]]},{"id":"a6415375.fc3d08","type":"MSSQL","z":"1bd17114.208f7f","mssqlCN":"35b0806c.4ac0e8","name":"Report Send Table MSSQL","outField":"payload","returnType":0,"throwErrors":"0","query":"\ndelete from [NBPReport].[dbo].[send] WHERE uid=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1600,"y":860,"wires":[["b3abde72.4aa4a","4be9b895.df3ad"]]},{"id":"bc52838b.d5e9b8","type":"function","z":"1bd17114.208f7f","name":"Kernel Send Delete Payload","func":"function convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.send_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1300,"y":860,"wires":[["a6415375.fc3d08","d351f09f.67705"]]},{"id":"d351f09f.67705","type":"debug","z":"1bd17114.208f7f","name":"Debug Send Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1550,"y":800,"wires":[]},{"id":"cd22b049.00b758","type":"debug","z":"1bd17114.208f7f","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2370,"y":800,"wires":[]},{"id":"4ca357c7.4060a","type":"switch","z":"1bd17114.208f7f","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2120,"y":860,"wires":[["cd22b049.00b758","3c3f6054.e5ae"],[]]},{"id":"4be9b895.df3ad","type":"debug","z":"1bd17114.208f7f","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1840,"y":800,"wires":[]},{"id":"3c3f6054.e5ae","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"STAN ACK","x":2370,"y":860,"wires":[]},{"id":"b3abde72.4aa4a","type":"function","z":"1bd17114.208f7f","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report DB send table Success, UID:\" + msg.send_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report DB send failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1860,"y":860,"wires":[["4ca357c7.4060a","15de1229.e4420e"]]},{"id":"a7ca20f2.896ad8","type":"function","z":"1bd17114.208f7f","name":"Convert Insert SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1290,"y":1560,"wires":[["b3078853.64e1d8","c276462d.16174"]]},{"id":"b3078853.64e1d8","type":"debug","z":"1bd17114.208f7f","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1600,"y":1460,"wires":[]},{"id":"bcd39946.df6498","type":"debug","z":"1bd17114.208f7f","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2490,"y":1500,"wires":[]},{"id":"14c2bcc9.69c133","type":"switch","z":"1bd17114.208f7f","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2240,"y":1560,"wires":[["bcd39946.df6498","b906a5f0.6e9988"],[]]},{"id":"b906a5f0.6e9988","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"STAN ACK","x":2470,"y":1560,"wires":[]},{"id":"5407e150.bcefb8","type":"function","z":"1bd17114.208f7f","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB send_record for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB send_record table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1980,"y":1560,"wires":[["14c2bcc9.69c133","c61f64f4.794e08"]]},{"id":"67ffa869.ce23b","type":"function","z":"1bd17114.208f7f","name":"Convert Update SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1270,"y":1780,"wires":[["1b6e4d1f.0006db","be2bfd50.900b68"]]},{"id":"1b6e4d1f.0006db","type":"debug","z":"1bd17114.208f7f","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1580,"y":1680,"wires":[]},{"id":"be2bfd50.900b68","type":"MSSQL","z":"1bd17114.208f7f","mssqlCN":"35b0806c.4ac0e8","name":"Report SendRecord MSSQL","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[send_record] \nSET    send_uid = @send_uid, \n       way_name = @way_name, \n       serial_number = @serial_number, \n       send_time = @send_time, \n       expire_time = @expire_time, \n       customer_id = @customer_id, \n       customer_phone = @customer_phone, \n       customer_reference = @customer_reference, \n       req_group_id = @req_group_id, \n       req_department=@req_department, \n       req_bu=@req_bu, \n       req_company=@req_company, \n       req_object_id=@req_object_id, \n       req_uid = @req_uid, \n       content = @content, \n       return_code = @return_code, \n       calc_section = @calc_section, \n       sending_section = @sending_section, \n       section = @section, \n       success_section = @success_section, \n       failure_section = @failure_section, \n       section_status_list = @section_status_list, \n       is_long = @is_long, \n       is_international = @is_international, \n       msg_id = @msg_id, \n       actual_send_time = @actual_send_time, \n       actual_send_phone = @actual_send_phone, \n       gateway_id = @gateway_id, \n       status = @status, \n       resp_code = @resp_code, \n       origin_resp_code = @origin_resp_code,\n       gwrecvat = @gwrecvat, \n       acceptat = @acceptat, \n       sendat = @sendat, \n       finish_time = @finish_time, \n       meta = @meta, \n       create_time = @create_time, \n       update_time = @update_time, \n       deliver_time = @deliver_time, \n       dr_time = @dr_time, \n       canceled_time = @canceled_time, \n       update_expired_time = @update_expired_time \nWHERE  uid = @uid \n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"serial_number","type":"Int","valueType":"msg","value":"payload.serial_number","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_time","type":"DateTime2","valueType":"msg","value":"payload.send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"expire_time","type":"DateTime2","valueType":"msg","value":"payload.expire_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"VarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_group_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_group_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_uid","type":"VarChar(?)","valueType":"msg","value":"payload.req_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"content","type":"NVarChar(?)","valueType":"msg","value":"payload.content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"calc_section","type":"TinyInt","valueType":"msg","value":"payload.calc_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sending_section","type":"TinyInt","valueType":"msg","value":"payload.sending_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section","type":"TinyInt","valueType":"msg","value":"payload.section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"success_section","type":"TinyInt","valueType":"msg","value":"payload.success_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"failure_section","type":"TinyInt","valueType":"msg","value":"payload.failure_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section_status_list","type":"VarChar(?)","valueType":"msg","value":"payload.section_status_list","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_long","type":"TinyInt","valueType":"msg","value":"payload.is_long","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_international","type":"TinyInt","valueType":"msg","value":"payload.is_international","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_id","type":"VarChar(?)","valueType":"msg","value":"payload.msg_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_time","type":"DateTime2","valueType":"msg","value":"payload.actual_send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_phone","type":"VarChar(?)","valueType":"msg","value":"payload.actual_send_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gwrecvat","type":"VarChar(?)","valueType":"msg","value":"payload.gwrecvat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"acceptat","type":"VarChar(?)","valueType":"msg","value":"payload.acceptat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sendat","type":"VarChar(?)","valueType":"msg","value":"payload.sendat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"finish_time","type":"DateTime2","valueType":"msg","value":"payload.finish_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"meta","type":"NVarChar(?)","valueType":"msg","value":"payload.meta","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"deliver_time","type":"DateTime2","valueType":"msg","value":"payload.deliver_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"dr_time","type":"DateTime2","valueType":"msg","value":"payload.dr_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"origin_resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.origin_resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_department","type":"VarChar(?)","valueType":"msg","value":"payload.req_department","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_bu","type":"VarChar(?)","valueType":"msg","value":"payload.req_bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_company","type":"VarChar(?)","valueType":"msg","value":"payload.req_company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_object_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_object_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1560,"y":1780,"wires":[["e3728899.9a42e8","511a6ca2.c1e66c"]]},{"id":"1d388a5f.134dc6","type":"debug","z":"1bd17114.208f7f","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2450,"y":1720,"wires":[]},{"id":"f4c0606c.e53018","type":"switch","z":"1bd17114.208f7f","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2200,"y":1780,"wires":[["1d388a5f.134dc6","7932f1c3.e926e8"],[]]},{"id":"e3728899.9a42e8","type":"debug","z":"1bd17114.208f7f","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1860,"y":1680,"wires":[]},{"id":"7932f1c3.e926e8","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"STAN ACK","x":2430,"y":1780,"wires":[]},{"id":"511a6ca2.c1e66c","type":"function","z":"1bd17114.208f7f","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DB send_record for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DB send_record table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1940,"y":1780,"wires":[["f4c0606c.e53018","5fbdd7ff.ffaa68"]]},{"id":"22cd7441.faa294","type":"function","z":"1bd17114.208f7f","name":"Convert Delete SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1270,"y":1980,"wires":[["97222ceb.d8392","973bbb3.19607c8"]]},{"id":"97222ceb.d8392","type":"debug","z":"1bd17114.208f7f","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1560,"y":1900,"wires":[]},{"id":"973bbb3.19607c8","type":"MSSQL","z":"1bd17114.208f7f","mssqlCN":"35b0806c.4ac0e8","name":"Report SendRecord MSSQL","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[send_record] where uid=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1560,"y":1980,"wires":[["13739ac5.4edb9d","449f988a.2c6ff"]]},{"id":"f2be00cd.63eb5","type":"debug","z":"1bd17114.208f7f","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2470,"y":1920,"wires":[]},{"id":"12f3ebad.5cb864","type":"switch","z":"1bd17114.208f7f","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2220,"y":1980,"wires":[["f2be00cd.63eb5","64a86582.d396dc"],[]]},{"id":"13739ac5.4edb9d","type":"debug","z":"1bd17114.208f7f","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1960,"y":1900,"wires":[]},{"id":"64a86582.d396dc","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"STAN ACK","x":2450,"y":1980,"wires":[]},{"id":"449f988a.2c6ff","type":"function","z":"1bd17114.208f7f","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report DB send_record for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report DB send_record table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1960,"y":1980,"wires":[["12f3ebad.5cb864","b2d7772a.379af8"]]},{"id":"6b6f9b38.416b24","type":"function","z":"1bd17114.208f7f","name":"Convert Insert SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_record_uid= convert_uuid(msg.payload.send_record_uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_table_uid = msg.payload.uid\nmsg.payload.send_record_uid = msg.payload.uid\n\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":2600,"wires":[["3b752069.c7fab8","e5a18d94.722ff"]]},{"id":"3b752069.c7fab8","type":"debug","z":"1bd17114.208f7f","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1440,"y":2500,"wires":[]},{"id":"e5a18d94.722ff","type":"MSSQL","z":"1bd17114.208f7f","mssqlCN":"35b0806c.4ac0e8","name":"Report SendRecordReply MSSQL","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[send_record_reply] \n            (uid, \n             send_record_uid, \n             customer_id, \n             customer_phone, \n             customer_reference, \n             tx_date, \n             tx_time, \n             event_code, \n             return_code, \n             create_time, \n             update_time, \n             reply_content, \n             reply_time, \n             status, \n             gateway_id, \n             code) \nVALUES     (@uid, \n            @send_record_uid, \n            @customer_id, \n            @customer_phone, \n            @customer_reference, \n            @tx_date, \n            @tx_time, \n            @event_code, \n            @return_code, \n            @create_time, \n            @update_time, \n            @reply_content, \n            @reply_time, \n            @status, \n            @gateway_id, \n            @code) \n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_record_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_record_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"NVarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"tx_date","type":"VarChar(?)","valueType":"msg","value":"payload.tx_date","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"tx_time","type":"VarChar(?)","valueType":"msg","value":"payload.tx_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"event_code","type":"VarChar(?)","valueType":"msg","value":"payload.event_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"reply_content","type":"NVarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"reply_time","type":"DateTime2","valueType":"msg","value":"payload.reply_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"TinyInt","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"code","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1460,"y":2600,"wires":[["c9278c12.434c98","81123baf.1dcb2"]]},{"id":"25d60caf.41f0fc","type":"debug","z":"1bd17114.208f7f","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2310,"y":2540,"wires":[]},{"id":"11331032.2f2a","type":"switch","z":"1bd17114.208f7f","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2080,"y":2600,"wires":[["25d60caf.41f0fc","2f5f481f.f34a98"],[]]},{"id":"c9278c12.434c98","type":"debug","z":"1bd17114.208f7f","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1800,"y":2500,"wires":[]},{"id":"2f5f481f.f34a98","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"STAN ACK","x":2310,"y":2600,"wires":[]},{"id":"81123baf.1dcb2","type":"function","z":"1bd17114.208f7f","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"Insert Report DB send_record_reply for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"Insert Report DB send_record_reply table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1820,"y":2600,"wires":[["11331032.2f2a","53addc0c.812c2c"]]},{"id":"77f4427c.5498a4","type":"function","z":"1bd17114.208f7f","name":"Convert Update SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_record_uid= convert_uuid(msg.payload.send_record_uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_table_uid = msg.payload.uid\nmsg.send_record_uid = msg.payload.uid\nmsg.payload.send_record_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":2800,"wires":[["23936970.28627e","6e83c597.3c7d04"]]},{"id":"23936970.28627e","type":"debug","z":"1bd17114.208f7f","name":"Debug Send Record Reply Table","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1440,"y":2700,"wires":[]},{"id":"121e0b1d.ad27a5","type":"debug","z":"1bd17114.208f7f","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2290,"y":2740,"wires":[]},{"id":"f735e75a.390ad8","type":"switch","z":"1bd17114.208f7f","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2040,"y":2800,"wires":[["121e0b1d.ad27a5","97ca0aff.abc2d8"],[]]},{"id":"7a650079.7ce23","type":"debug","z":"1bd17114.208f7f","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1780,"y":2700,"wires":[]},{"id":"97ca0aff.abc2d8","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"STAN ACK","x":2270,"y":2800,"wires":[]},{"id":"50fa6f0c.a3326","type":"function","z":"1bd17114.208f7f","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DB send_record_reply for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DB send_record_reply table failure: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":2800,"wires":[["f735e75a.390ad8","8744526.5e4863"]]},{"id":"57fd1e20.9f4be","type":"function","z":"1bd17114.208f7f","name":"Convert Delete SendRecordReply Payload","func":"\n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload2 = msg.payload\n\nmsg.send_record_reply_table_uid = msg.payload.uid\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":3000,"wires":[["207134c3.d95cdc","aad15a73.fdae98"]]},{"id":"207134c3.d95cdc","type":"debug","z":"1bd17114.208f7f","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1440,"y":2900,"wires":[]},{"id":"aad15a73.fdae98","type":"MSSQL","z":"1bd17114.208f7f","mssqlCN":"35b0806c.4ac0e8","name":"Report SendRecordReply MSSQL","outField":"payload","returnType":0,"throwErrors":"0","query":"DELETE from [dbo].[send_record_reply] where uid=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1460,"y":3000,"wires":[["2e665894.5e53e8","6c4c9bd6.3e33cc"]]},{"id":"b9f2dd1d.6a2bf","type":"debug","z":"1bd17114.208f7f","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2310,"y":2940,"wires":[]},{"id":"373b9b6e.771174","type":"switch","z":"1bd17114.208f7f","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2080,"y":3000,"wires":[["b9f2dd1d.6a2bf","e35b455d.bed9e"],[]]},{"id":"2e665894.5e53e8","type":"debug","z":"1bd17114.208f7f","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1760,"y":2900,"wires":[]},{"id":"e35b455d.bed9e","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"STAN ACK","x":2310,"y":3000,"wires":[]},{"id":"6c4c9bd6.3e33cc","type":"function","z":"1bd17114.208f7f","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report DB send_record_reply for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report DB send_record_reply table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1820,"y":3000,"wires":[["373b9b6e.771174","aafbfb9b.405e5"]]},{"id":"8c04ae9d.fbd298","type":"debug","z":"1bd17114.208f7f","name":"Redis Result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":510,"y":3400,"wires":[]},{"id":"a9c7830f.bacc98","type":"redis-in","z":"1bd17114.208f7f","d":true,"server":"9610aff8.a70458","command":"subscribe","name":"","topic":"gravity_kernel_report","obj":true,"timeout":"3","x":320,"y":3400,"wires":[["8c04ae9d.fbd298"]]},{"id":"f04bf8df.312698","type":"redis-out","z":"1bd17114.208f7f","server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2260,"y":300,"wires":[]},{"id":"fa82e627.4cba3","type":"redis-out","z":"1bd17114.208f7f","server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2140,"y":520,"wires":[]},{"id":"15de1229.e4420e","type":"redis-out","z":"1bd17114.208f7f","server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2120,"y":800,"wires":[]},{"id":"c61f64f4.794e08","type":"redis-out","z":"1bd17114.208f7f","server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2260,"y":1480,"wires":[]},{"id":"5fbdd7ff.ffaa68","type":"redis-out","z":"1bd17114.208f7f","server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2220,"y":1700,"wires":[]},{"id":"b2d7772a.379af8","type":"redis-out","z":"1bd17114.208f7f","server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2220,"y":1920,"wires":[]},{"id":"53addc0c.812c2c","type":"redis-out","z":"1bd17114.208f7f","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2080,"y":2500,"wires":[]},{"id":"8744526.5e4863","type":"redis-out","z":"1bd17114.208f7f","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2060,"y":2740,"wires":[]},{"id":"aafbfb9b.405e5","type":"redis-out","z":"1bd17114.208f7f","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2040,"y":2900,"wires":[]},{"id":"c12bb94e.9b3c3","type":"switch","z":"1bd17114.208f7f","name":"Check Created Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordProductCreate","vt":"str"},{"t":"eq","v":"SendRecordProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":820,"y":1780,"wires":[["a7ca20f2.896ad8"],["a7ca20f2.896ad8"],["67ffa869.ce23b"],["22cd7441.faa294"],["a7ca20f2.896ad8"],["6fc6d990.68c128"]]},{"id":"dd38db84.5c7468","type":"switch","z":"1bd17114.208f7f","name":"Check Created Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordReplyProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordReplyProductCreate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":700,"y":2780,"wires":[["6b6f9b38.416b24"],["6b6f9b38.416b24"],["77f4427c.5498a4"],["57fd1e20.9f4be"],["6b6f9b38.416b24"],["2804c7d.95befb8"]]},{"id":"e83d1682.49753","type":"debug","z":"1bd17114.208f7f","name":"Display Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":700,"y":1640,"wires":[]},{"id":"25cdc951.c5ac2e","type":"nats-streaming-subscribe","z":"1bd17114.208f7f","name":"SendRecordReplyProduct Source","server":"81898769.b5aff8","channel":"rowData.source.SendRecordReplyProduct","clientID":"kernel-atomic-003","start":"all","start_option":"","durable":true,"durable_name":"kernel-atomic-003","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":220,"y":2780,"wires":[["697c97fa.1b2138"]]},{"id":"5a370a6a.453364","type":"nats-streaming-subscribe","z":"1bd17114.208f7f","name":"SendProduct Source","server":"81898769.b5aff8","channel":"rowData.source.SendProduct","clientID":"kernel-atomic-001","start":"last_reveived","start_option":"","durable":true,"durable_name":"kernel-atomic-001","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":190,"y":600,"wires":[["5591f647.5422"]]},{"id":"1c9e065f.a0da22","type":"comment","z":"1bd17114.208f7f","name":"Send Table","info":"","x":180,"y":640,"wires":[]},{"id":"bf62da98.f93a7","type":"comment","z":"1bd17114.208f7f","name":"Send Record Table","info":"","x":270,"y":1720,"wires":[]},{"id":"6411a662.9259e8","type":"comment","z":"1bd17114.208f7f","name":"Send Record Reply Table","info":"","x":230,"y":2840,"wires":[]},{"id":"63d9dff.a4474a","type":"nats-streaming-subscribe","z":"6d95478a.67aeb","name":"SendRecordReplyProduct","server":"81898769.b5aff8","channel":"rowData.source.SendRecordReplyProduct","clientID":"report-atomic-sendreply-0002","start":"all","start_option":"","durable":true,"durable_name":"report-atomic-sendreply-0002","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":510,"y":3120,"wires":[["5abca2e6.bbf4b4"]]},{"id":"5abca2e6.bbf4b4","type":"json","z":"6d95478a.67aeb","name":"","property":"payload","action":"","pretty":false,"x":790,"y":3120,"wires":[["d80b5dd0.7c555","a197d691.1dd0e8"]]},{"id":"4bef86bc.255bd8","type":"json","z":"6d95478a.67aeb","name":"","property":"payload","action":"","pretty":false,"x":750,"y":2060,"wires":[["7567ee94.5e18e8","a92256ff.caf53"]]},{"id":"83549fda.d97c68","type":"function","z":"6d95478a.67aeb","name":"Convert Insert SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\n// msg.payload.send_time = convert_datetime(msg.payload.send_time)\n// msg.payload.expire_time = convert_datetime(msg.payload.expire_time)\n// msg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\n// msg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\n// msg.payload.dr_time = convert_datetime(msg.payload.dr_time)\n// msg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\n// msg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":1680,"wires":[["2f7bbabc.4b1cfe","7b24efac.7dea98"]]},{"id":"2f7bbabc.4b1cfe","type":"debug","z":"6d95478a.67aeb","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2040,"y":1580,"wires":[]},{"id":"7b24efac.7dea98","type":"MSSQL","z":"6d95478a.67aeb","mssqlCN":"35b0806c.4ac0e8","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"\nINSERT INTO [dbo].[SI_SinoPacBankMsgInfo] \n            (UID,\n             SerialNum, \n             GUID, \n             MPhoneNum, \n             MsgData, \n             Priority, \n             BookingTime, \n             DepID, \n             MsgType, \n             Memo, \n             SenderID, \n             Bu, \n             Company, \n             Channel, \n             Reference, \n             GroupID, \n             UserName, \n             SourceType, \n             ObjectID, \n             SerialNo, \n             DestNo, \n             DestName, \n             DestCategory, \n             OrderID, \n             MID, \n             SubmitTime, \n             OrderTime, \n             ExpireTime, \n             StatusFlag, \n             SubmitFlag, \n             Filler, \n             StatusTime, \n             BatchCode) \n (\n SELECT send_record.uid                                                                                                                    AS UID,\n        send_record.serial_number                                                                                                          AS SerialNum,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GUID,\n        send_record.customer_phone                                                                                                         AS MPhoneNum,\n        send_record.content                                                                                                                AS MsgData,\n        send.priority                                                                                                                      AS Priority,\n        CAST(send_record.send_time AS DATETIME)                                                                                            AS BookingTime,\n        send_record.req_department                                                                                                         AS DepID,\n        send.msg_type                                                                                                                      AS MsgType,\n        send.memo                                                                                                                          AS Memo,\n        send_record.customer_id                                                                                                            AS SenderID,\n        send_record.req_bu                                                                                                                 AS Bu,\n        send_record.req_company                                                                                                            AS Company,\n        send.req_channel                                                                                                                   AS Channel,\n        send_record.customer_reference                                                                                                     AS REFERENCE,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GroupID,\n        substring(CONVERT(VARCHAR(36), send.create_user), 1, 20)                                                                           AS UserName,\n        ''                                                                                                                                 AS SourceType,\n        send_record.req_object_id                                                                                                          AS ObjectID,\n        CONVERT(VARCHAR(36), send_record.uid)                                                                                              AS SerialNo,\n        send_record.customer_phone                                                                                                         AS DestNo,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS DestName,\n        send_record.req_department                                                                                                         AS DestCategory,\n        ''                                                                                                                                 AS OrderID,\n        ''                                                                                                                                 AS MID,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.actual_send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14) AS SubmitTime, \n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14)        AS OrderTime, \n        CAST(send_record.expire_time AS DATETIME)                                                                                          AS ExpireTime, \n        send_record.resp_code                                                                                                              AS StatusFlag,\n        ''                                                                                                                                 AS SubmitFlag,\n        ''                                                                                                                                 AS Filler,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.dr_time AS DATETIME ),20),':',''),'-',''),' ',''),1,14)         AS StatusTime, \n        send.req_batch_id                                                                                                                  AS BatchCode\n FROM   [NBPKernel].[dbo].[send_record]                                                                                                    AS send_record,\n        [NBPKernel].[dbo].[send]                                                                                                           AS send\n WHERE  send_record.uid = @uid \n AND    send_record.send_uid = send.uid)        ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"serial_number","type":"Int","valueType":"msg","value":"payload.serial_number","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_time","type":"DateTime2","valueType":"msg","value":"payload.send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"expire_time","type":"DateTime2","valueType":"msg","value":"payload.expire_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"NVarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_group_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_group_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_uid","type":"VarChar(?)","valueType":"msg","value":"payload.req_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"content","type":"NVarChar(?)","valueType":"msg","value":"payload.content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"calc_section","type":"TinyInt","valueType":"msg","value":"payload.calc_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sending_section","type":"TinyInt","valueType":"msg","value":"payload.sending_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section","type":"TinyInt","valueType":"msg","value":"payload.section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"success_section","type":"TinyInt","valueType":"msg","value":"payload.success_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"failure_section","type":"TinyInt","valueType":"msg","value":"payload.failure_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section_status_list","type":"VarChar(?)","valueType":"msg","value":"payload.section_status_list","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_long","type":"TinyInt","valueType":"msg","value":"payload.is_long","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_international","type":"TinyInt","valueType":"msg","value":"payload.is_international","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_id","type":"VarChar(?)","valueType":"msg","value":"payload.msg_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_time","type":"DateTime2","valueType":"msg","value":"payload.actual_send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_phone","type":"VarChar(?)","valueType":"msg","value":"payload.actual_send_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"origin_resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.origin_resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gwrecvat","type":"VarChar(?)","valueType":"msg","value":"payload.gwrecvat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"acceptat","type":"VarChar(?)","valueType":"msg","value":"payload.acceptat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sendat","type":"VarChar(?)","valueType":"msg","value":"payload.sendat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"finish_time","type":"DateTime2","valueType":"msg","value":"payload.finish_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"meta","type":"NVarChar(?)","valueType":"msg","value":"payload.meta","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"deliver_time","type":"DateTime2","valueType":"msg","value":"payload.deliver_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"dr_time","type":"DateTime2","valueType":"msg","value":"payload.dr_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2050,"y":1680,"wires":[["60043229.9e7e74"]]},{"id":"6424ac52.fa5fac","type":"debug","z":"6d95478a.67aeb","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2890,"y":1480,"wires":[]},{"id":"1831516b.72728f","type":"switch","z":"6d95478a.67aeb","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2640,"y":1540,"wires":[["6424ac52.fa5fac","cf52899c.59eb88"],[]]},{"id":"cf52899c.59eb88","type":"nats-streaming-acknowledge","z":"6d95478a.67aeb","name":"STAN ACK","x":2870,"y":1540,"wires":[]},{"id":"60043229.9e7e74","type":"function","z":"6d95478a.67aeb","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2380,"y":1540,"wires":[["1831516b.72728f","49e1e204.574b2c"]]},{"id":"df792fe7.4bf8f","type":"function","z":"6d95478a.67aeb","name":"Convert Update SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\n// msg.payload.send_time = convert_datetime(msg.payload.send_time)\n// msg.payload.expire_time = convert_datetime(msg.payload.expire_time)\n// msg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\n// msg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\n// msg.payload.dr_time = convert_datetime(msg.payload.dr_time)\n// msg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\n// msg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":2060,"wires":[["54574fe4.c815a8","80f602e6.f9c23"]]},{"id":"54574fe4.c815a8","type":"debug","z":"6d95478a.67aeb","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2080,"y":1960,"wires":[]},{"id":"80f602e6.f9c23","type":"MSSQL","z":"6d95478a.67aeb","mssqlCN":"35b0806c.4ac0e8","name":"Update Report SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"DECLARE @SerialNum int \nDECLARE @GUID char(36) \nDECLARE @MPhoneNum varchar(25) \nDECLARE @MsgData nvarchar(max) \nDECLARE @Priority tinyint \nDECLARE @BookingTime datetime \nDECLARE @ExpireTime datetime \nDECLARE @DepID varchar(8) \nDECLARE @MsgType varchar(5) \nDECLARE @Memo nvarchar(40) \nDECLARE @SenderID varchar(15) \nDECLARE @GroupID varchar(36) \nDECLARE @Bu char(6) \nDECLARE @Company char(6) \nDECLARE @Channel char(16) \nDECLARE @Reference char(64) \nDECLARE @UserName varchar(20) \nDECLARE @SourceType char(1) \nDECLARE @ObjectID varchar(36) \nDECLARE @SerialNo varchar(36) \nDECLARE @DestNo varchar(20) \nDECLARE @DestName varchar(36) \nDECLARE @DestCategory char(8) \nDECLARE @DelegateTime char(14) \nDECLARE @SubmitTime char(14) \nDECLARE @OrderID varchar(20) \nDECLARE @MID varchar(5) \nDECLARE @OrderTime char(14) \nDECLARE @StatusFlag char(1) \nDECLARE @SubmitFlag varchar(3) \nDECLARE @StatusTime char(14) \nDECLARE @BatchCode varchar(64)\nDECLARE @Filler varchar(5)\n\nSELECT @SerialNum = send_record.serial_number, \n       @GUID = convert(varchar(36), send_record.req_uid), \n       @MPhoneNum = send_record.customer_phone, \n       @MsgData = send_record.content, \n       @Priority = send.priority, \n       @BookingTime = send_record.send_time, \n       @DepID = send_record.req_department, \n       @MsgType = send.msg_type, \n       @Memo = send.memo, \n       @SenderID = send_record.customer_id, \n       @Bu = send_record.req_bu, \n       @Company = send_record.req_company, \n       @Channel = send.req_channel, \n       @Reference = send_record.customer_reference, \n       @GroupID = convert(varchar(36), send_record.req_uid), \n       @UserName = Substring(convert(varchar(36), send.create_user), 1, 20), \n       @SourceType = '', \n       @ObjectID = send_record.req_object_id, \n       @SerialNo = convert(varchar(36), send_record.uid), \n       @DestNo = send_record.customer_phone, \n       @DestName = convert(varchar(36), send_record.req_uid), \n       @DestCategory = send_record.req_department, \n       @OrderID = '', \n       @MID = '', \n       @SubmitTime = substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,cast(send_record.actual_send_time as datetime),20),':',''),'-',''),' ',''),1,14), \n       @OrderTime = substring(replace(replace(replace(convert(varchar,cast(send_record.send_time as datetime),20),':',''),'-',''),' ',''),1,14), \n       @ExpireTime = cast(send_record.expire_time as datetime),\n       @StatusFlag = send_record.resp_code, \n       @SubmitFlag = '', \n       @Filler = '', \n       @StatusTime = substring(replace(replace(replace(convert(varchar,cast(send_record.dr_time as datetime),20),':',''),'-',''),' ',''),1,14),\n       @BatchCode = send.req_batch_id\nFROM   [NBPKernel].[dbo].[send_record] as send_record, \n       [NBPKernel].[dbo].[send] as send \nWHERE  send_record.uid = @uid \n       AND send_record.send_uid = send.uid \n\n\nUPDATE [dbo].[SI_SinoPacBankMsgInfo]\nSET     SerialNum = @SerialNum,\n        MPhoneNum=@MPhoneNum ,\n        MsgData=@MsgData ,\n        Priority=@Priority,\n        BookingTime=@BookingTime ,\n        DepID=@DepID ,\n        MsgType=@MsgType,\n        Memo=@Memo ,\n        SenderID=@SenderID ,\n        Bu=@Bu ,\n        Company=@Company ,\n        Channel=@Channel ,\n        Reference=@Reference ,\n        GroupID=@GroupID ,\n        UserName=@UserName ,\n        SourceType=@SourceType ,\n        ObjectID=@ObjectID ,\n        SerialNo=@SerialNo,\n        DestNo=@DestNo ,\n        DestCategory=@DestCategory,\n        OrderID=@OrderID ,\n        MID=@MID ,\n        SubmitTime=@SubmitTime,\n        OrderTime=@OrderTime,\n        ExpireTime=@ExpireTime ,\n        StatusFlag=@StatusFlag ,\n        SubmitFlag=@SubmitFlag,\n        Filler=@Filler ,\n        StatusTime=@StatusTime,\n        BatchCode=@BatchCode\nWHERE UID=@uid\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2120,"y":2060,"wires":[["bec72c6a.97e75"]]},{"id":"1e2513bb.0c55bc","type":"debug","z":"6d95478a.67aeb","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2950,"y":2000,"wires":[]},{"id":"ab3856a.87d6d28","type":"switch","z":"6d95478a.67aeb","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2700,"y":2060,"wires":[["1e2513bb.0c55bc","ef59c489.bfd51"],[]]},{"id":"ef59c489.bfd51","type":"nats-streaming-acknowledge","z":"6d95478a.67aeb","name":"STAN ACK","x":2930,"y":2060,"wires":[]},{"id":"bec72c6a.97e75","type":"function","z":"6d95478a.67aeb","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DB send_record for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DB send_record table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2440,"y":2060,"wires":[["ab3856a.87d6d28","99475ef3.ba5db"]]},{"id":"8b8abcec.1c0d08","type":"function","z":"6d95478a.67aeb","name":"Convert Delete SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1830,"y":2400,"wires":[["e15dbb06.e4a4f","4e865556.71130c"]]},{"id":"e15dbb06.e4a4f","type":"debug","z":"6d95478a.67aeb","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2120,"y":2320,"wires":[]},{"id":"4e865556.71130c","type":"MSSQL","z":"6d95478a.67aeb","mssqlCN":"35b0806c.4ac0e8","name":"Delete SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[SI_SinoPacBankMsgInfo] where uid=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2130,"y":2400,"wires":[["47cbfea6.e971b"]]},{"id":"584c5ce6.643c04","type":"debug","z":"6d95478a.67aeb","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3030,"y":2340,"wires":[]},{"id":"45a7016b.ee4a08","type":"switch","z":"6d95478a.67aeb","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2780,"y":2400,"wires":[["584c5ce6.643c04","c357a9c4.f0d448"],[]]},{"id":"c357a9c4.f0d448","type":"nats-streaming-acknowledge","z":"6d95478a.67aeb","name":"STAN ACK","x":3010,"y":2400,"wires":[]},{"id":"47cbfea6.e971b","type":"function","z":"6d95478a.67aeb","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2520,"y":2400,"wires":[["45a7016b.ee4a08","27862c19.78a7ac"]]},{"id":"3155c7cd.8490a8","type":"function","z":"6d95478a.67aeb","name":"Convert Insert SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1560,"y":2920,"wires":[["9085b99.26362c8","5caad886.d8dab"]]},{"id":"9085b99.26362c8","type":"debug","z":"6d95478a.67aeb","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1880,"y":2820,"wires":[]},{"id":"b0f40e44.6a044","type":"debug","z":"6d95478a.67aeb","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2770,"y":2860,"wires":[]},{"id":"f2b91d44.abe57","type":"switch","z":"6d95478a.67aeb","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2520,"y":2920,"wires":[["b0f40e44.6a044","9bd4675a.44084"],[]]},{"id":"627dcaf1.026584","type":"debug","z":"6d95478a.67aeb","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2240,"y":2820,"wires":[]},{"id":"9bd4675a.44084","type":"nats-streaming-acknowledge","z":"6d95478a.67aeb","name":"STAN ACK","x":2750,"y":2920,"wires":[]},{"id":"ba9fb29a.97de9","type":"function","z":"6d95478a.67aeb","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"Insert ReportMsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"Insert Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2260,"y":2920,"wires":[["f2b91d44.abe57","26157e5c.e82b3a"]]},{"id":"d969f3ed.8c868","type":"function","z":"6d95478a.67aeb","name":"Convert Update SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1570,"y":3120,"wires":[["3b618b54.efc8d4","31056e10.31d692"]]},{"id":"3b618b54.efc8d4","type":"debug","z":"6d95478a.67aeb","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1880,"y":3020,"wires":[]},{"id":"25598141.076a8e","type":"debug","z":"6d95478a.67aeb","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2730,"y":3060,"wires":[]},{"id":"2f02f1c.e23958e","type":"switch","z":"6d95478a.67aeb","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2480,"y":3120,"wires":[["25598141.076a8e","4ff62a8a.e213ac"],[]]},{"id":"eb06d7dc.d458e","type":"debug","z":"6d95478a.67aeb","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2220,"y":3020,"wires":[]},{"id":"4ff62a8a.e213ac","type":"nats-streaming-acknowledge","z":"6d95478a.67aeb","name":"STAN ACK","x":2710,"y":3120,"wires":[]},{"id":"1582c1e2.1f10a6","type":"function","z":"6d95478a.67aeb","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Update ReportMsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2220,"y":3120,"wires":[["2f02f1c.e23958e","2d835d51.e4e99a"]]},{"id":"8e28b26c.5f5f9","type":"function","z":"6d95478a.67aeb","name":"Convert Delete SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1570,"y":3320,"wires":[["3ab24405.92c334","a1eb1545.f93428"]]},{"id":"3ab24405.92c334","type":"debug","z":"6d95478a.67aeb","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1880,"y":3220,"wires":[]},{"id":"5ad7b0db.c4ddd","type":"debug","z":"6d95478a.67aeb","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2770,"y":3260,"wires":[]},{"id":"9f10f64.4d07888","type":"switch","z":"6d95478a.67aeb","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2520,"y":3320,"wires":[["5ad7b0db.c4ddd","3aeb9ab.0a85fe6"],[]]},{"id":"1d3a76b6.bbb581","type":"debug","z":"6d95478a.67aeb","name":"Debug MSSQL Error","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2200,"y":3220,"wires":[]},{"id":"3aeb9ab.0a85fe6","type":"nats-streaming-acknowledge","z":"6d95478a.67aeb","name":"STAN ACK","x":2750,"y":3320,"wires":[]},{"id":"4bbf94be.4ddbfc","type":"function","z":"6d95478a.67aeb","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Delete ReportMsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2220,"y":3340,"wires":[["9f10f64.4d07888","b78779bc.791d7"]]},{"id":"49e1e204.574b2c","type":"redis-out","z":"6d95478a.67aeb","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2660,"y":1460,"wires":[]},{"id":"99475ef3.ba5db","type":"redis-out","z":"6d95478a.67aeb","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2720,"y":1980,"wires":[]},{"id":"27862c19.78a7ac","type":"redis-out","z":"6d95478a.67aeb","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2780,"y":2340,"wires":[]},{"id":"26157e5c.e82b3a","type":"redis-out","z":"6d95478a.67aeb","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2520,"y":2820,"wires":[]},{"id":"2d835d51.e4e99a","type":"redis-out","z":"6d95478a.67aeb","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2500,"y":3060,"wires":[]},{"id":"b78779bc.791d7","type":"redis-out","z":"6d95478a.67aeb","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2480,"y":3220,"wires":[]},{"id":"7567ee94.5e18e8","type":"switch","z":"6d95478a.67aeb","name":"Check Payload Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordProductCreate","vt":"str"},{"t":"eq","v":"SendRecordProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":1120,"y":2060,"wires":[["83549fda.d97c68"],["83549fda.d97c68"],["df792fe7.4bf8f"],["8b8abcec.1c0d08"],["83549fda.d97c68"],["38b42a70.95bcc6"]]},{"id":"d80b5dd0.7c555","type":"switch","z":"6d95478a.67aeb","name":"Check Created Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordReplyProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordReplyProductCreate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":1040,"y":3120,"wires":[["3155c7cd.8490a8"],["3155c7cd.8490a8"],["d969f3ed.8c868"],["3a93171a.3fb3b8"],["3155c7cd.8490a8"],["3a93171a.3fb3b8"]]},{"id":"a92256ff.caf53","type":"debug","z":"6d95478a.67aeb","name":"Display Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":920,"y":1940,"wires":[]},{"id":"3848fb2e.2ae794","type":"nats-streaming-subscribe","z":"6d95478a.67aeb","name":"Send Record Product","server":"81898769.b5aff8","channel":"rowData.source.SendRecordProduct","clientID":"report-atomic-sendrecord-0001","start":"all","start_option":"","durable":true,"durable_name":"report-atomic-sendrecord-0001","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":420,"y":2060,"wires":[["4bef86bc.255bd8"]]},{"id":"a1eb1545.f93428","type":"MSSQL","z":"6d95478a.67aeb","mssqlCN":"35b0806c.4ac0e8","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[MsgMo] where UID=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1880,"y":3340,"wires":[["4bbf94be.4ddbfc"]]},{"id":"38b42a70.95bcc6","type":"nats-streaming-acknowledge","z":"6d95478a.67aeb","name":"STAN ACK","x":1490,"y":2200,"wires":[]},{"id":"2804c7d.95befb8","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"","x":720,"y":3000,"wires":[]},{"id":"6fc6d990.68c128","type":"nats-streaming-acknowledge","z":"1bd17114.208f7f","name":"","x":880,"y":1980,"wires":[]},{"id":"3a93171a.3fb3b8","type":"nats-streaming-acknowledge","z":"6d95478a.67aeb","name":"","x":1400,"y":3240,"wires":[]},{"id":"a197d691.1dd0e8","type":"debug","z":"6d95478a.67aeb","name":"Display Payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":940,"y":2940,"wires":[]},{"id":"73e1b63f.fb3748","type":"comment","z":"6d95478a.67aeb","name":"SI_SinoPacBankMsgInfo","info":"","x":450,"y":2120,"wires":[]},{"id":"3e1f11b9.883886","type":"comment","z":"6d95478a.67aeb","name":"MsgMo","info":"","x":510,"y":3160,"wires":[]},{"id":"31056e10.31d692","type":"MSSQL","z":"6d95478a.67aeb","mssqlCN":"35b0806c.4ac0e8","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[MsgMo] \nSET    SerialNo = @uid, \n       ReceiveTime = Replace(Replace(Replace(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120), ':', ''), '-', ''), ' ', ''), \n       MID = @MID, \n       DestNo = @DestNo,\n       MsgData = @MsgData \nWHERE  UID = @uid ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"DateTime","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"VarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1880,"y":3120,"wires":[["1582c1e2.1f10a6"]]},{"id":"b7e1c0b0.29dd88","type":"nats-streaming-subscribe","z":"3ca7bb40.2d0a8c","name":"SendRecordReplyProduct","server":"81898769.b5aff8","channel":"rowData.source.SendRecordReplyProduct","clientID":"cache1-0002","start":"all","start_option":"","durable":true,"durable_name":"cache1-0002","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":290,"y":1680,"wires":[["6b722f18.feb98"]]},{"id":"6b722f18.feb98","type":"json","z":"3ca7bb40.2d0a8c","name":"","property":"payload","action":"","pretty":false,"x":570,"y":1680,"wires":[["ee2f50e0.357de","579098be.5e13f8"]]},{"id":"331ba220.f90f0e","type":"json","z":"3ca7bb40.2d0a8c","name":"","property":"payload","action":"","pretty":false,"x":530,"y":620,"wires":[["6e740b0f.d6a34c","f6e6f6db.bf6ca8"]]},{"id":"3e14ab8.e1a5054","type":"function","z":"3ca7bb40.2d0a8c","name":"Convert Insert SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1510,"y":240,"wires":[["9203369.2c6dfc8","888bff7b.8a8158"]]},{"id":"9203369.2c6dfc8","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1820,"y":140,"wires":[]},{"id":"9a62b6c5.12e0c8","type":"debug","z":"3ca7bb40.2d0a8c","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2670,"y":40,"wires":[]},{"id":"f6061c21.fb48c","type":"switch","z":"3ca7bb40.2d0a8c","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2420,"y":100,"wires":[["9a62b6c5.12e0c8","ec25ce78.ef294"],[]]},{"id":"ec25ce78.ef294","type":"nats-streaming-acknowledge","z":"3ca7bb40.2d0a8c","name":"STAN ACK","x":2650,"y":100,"wires":[]},{"id":"2cc8879d.d09c4","type":"function","z":"3ca7bb40.2d0a8c","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_reply_table_uid\n\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2160,"y":100,"wires":[["f6061c21.fb48c","491b5325.96e04c"]]},{"id":"329ce82d.82144","type":"function","z":"3ca7bb40.2d0a8c","name":"Convert Update SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_reply_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1550,"y":620,"wires":[["d5f7f095.6d965","c27b0872.aec1a8"]]},{"id":"d5f7f095.6d965","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1860,"y":520,"wires":[]},{"id":"b8c3c008.ef9e98","type":"debug","z":"3ca7bb40.2d0a8c","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2730,"y":560,"wires":[]},{"id":"bf8dd941.7b9c58","type":"switch","z":"3ca7bb40.2d0a8c","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2480,"y":620,"wires":[["b8c3c008.ef9e98","18c4ead1.42d525"],[]]},{"id":"18c4ead1.42d525","type":"nats-streaming-acknowledge","z":"3ca7bb40.2d0a8c","name":"STAN ACK","x":2710,"y":620,"wires":[]},{"id":"1401b077.27d1b8","type":"function","z":"3ca7bb40.2d0a8c","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report MsgMO for Success, UID:\" + msg.send_record_reply_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DBMsgMO table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2260,"y":620,"wires":[["bf8dd941.7b9c58","6a5afc29.862a04"]]},{"id":"8315a5de.f205e","type":"function","z":"3ca7bb40.2d0a8c","name":"Convert Delete SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\n// msg.payload.send_time = convert_datetime(msg.payload.send_time)\n// msg.payload.expire_time = convert_datetime(msg.payload.expire_time)\n// msg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\n// msg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\n// msg.payload.dr_time = convert_datetime(msg.payload.dr_time)\n// msg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\n// msg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1610,"y":960,"wires":[["38336093.fc0358","4653fdef.17ec94"]]},{"id":"38336093.fc0358","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1900,"y":880,"wires":[]},{"id":"4653fdef.17ec94","type":"MSSQL","z":"3ca7bb40.2d0a8c","mssqlCN":"f04213fa.c22b48","name":"Delete SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[SI_SinoPacBankMsgInfo] where uid=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1910,"y":960,"wires":[["65512a01.a724c4"]]},{"id":"d7dd9593.1c3ed8","type":"debug","z":"3ca7bb40.2d0a8c","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2810,"y":900,"wires":[]},{"id":"8964f67e.941d7","type":"switch","z":"3ca7bb40.2d0a8c","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2560,"y":960,"wires":[["d7dd9593.1c3ed8","af0b792a.23b2a8"],[]]},{"id":"af0b792a.23b2a8","type":"nats-streaming-acknowledge","z":"3ca7bb40.2d0a8c","name":"STAN ACK","x":2790,"y":960,"wires":[]},{"id":"65512a01.a724c4","type":"function","z":"3ca7bb40.2d0a8c","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_reply_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2300,"y":960,"wires":[["8964f67e.941d7","9ca9d1dd.86c8e8"]]},{"id":"9a20ccfd.a724d","type":"function","z":"3ca7bb40.2d0a8c","name":"Convert Insert SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1340,"y":1480,"wires":[["27a86e8a.e45b3a","f12a7f78.b8069"]]},{"id":"27a86e8a.e45b3a","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1660,"y":1380,"wires":[]},{"id":"e6bcd347.e5acd8","type":"debug","z":"3ca7bb40.2d0a8c","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2550,"y":1420,"wires":[]},{"id":"d3a9123.8c9ea7","type":"switch","z":"3ca7bb40.2d0a8c","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2300,"y":1480,"wires":[["e6bcd347.e5acd8","ee54903a.df6bd"],[]]},{"id":"8a2a64ac.f12838","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2020,"y":1380,"wires":[]},{"id":"ee54903a.df6bd","type":"nats-streaming-acknowledge","z":"3ca7bb40.2d0a8c","name":"STAN ACK","x":2530,"y":1480,"wires":[]},{"id":"3a8e5bbf.b1be2c","type":"function","z":"3ca7bb40.2d0a8c","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"Insert Report DB MsgMo for Success, UID:\" + msg.send_record_reply_uid \n} else {\n    msg.result = \"Insert Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2040,"y":1480,"wires":[["d3a9123.8c9ea7","48e2e4ee.3946c4"]]},{"id":"2beb4828.954b78","type":"function","z":"3ca7bb40.2d0a8c","name":"Convert Update SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1350,"y":1680,"wires":[["5907d7c6.321c88","3666e5a6.39866a"]]},{"id":"5907d7c6.321c88","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1660,"y":1580,"wires":[]},{"id":"7ede352e.12b1bc","type":"debug","z":"3ca7bb40.2d0a8c","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2510,"y":1620,"wires":[]},{"id":"3838461.75d9eba","type":"switch","z":"3ca7bb40.2d0a8c","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2260,"y":1680,"wires":[["7ede352e.12b1bc","8f1e309.1bbeb5"],[]]},{"id":"bd230744.141c9","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2000,"y":1580,"wires":[]},{"id":"8f1e309.1bbeb5","type":"nats-streaming-acknowledge","z":"3ca7bb40.2d0a8c","name":"STAN ACK","x":2490,"y":1680,"wires":[]},{"id":"adf54ddb.0f4168","type":"function","z":"3ca7bb40.2d0a8c","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":1680,"wires":[["3838461.75d9eba","3b9af867.e424c8"]]},{"id":"211e5408.b117a4","type":"function","z":"3ca7bb40.2d0a8c","name":"Convert Delete SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1350,"y":1880,"wires":[["856ec42b.ce801","fefee6b4.2ac3e8"]]},{"id":"856ec42b.ce801","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":1660,"y":1780,"wires":[]},{"id":"6279fb46.0754f4","type":"debug","z":"3ca7bb40.2d0a8c","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":2550,"y":1820,"wires":[]},{"id":"d0cb2118.456758","type":"switch","z":"3ca7bb40.2d0a8c","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":2300,"y":1880,"wires":[["6279fb46.0754f4","3d87febe.66e51a"],[]]},{"id":"93ba3d36.d07ab","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1980,"y":1780,"wires":[]},{"id":"3d87febe.66e51a","type":"nats-streaming-acknowledge","z":"3ca7bb40.2d0a8c","name":"STAN ACK","x":2530,"y":1880,"wires":[]},{"id":"236aee73.a1895a","type":"function","z":"3ca7bb40.2d0a8c","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":1900,"wires":[["d0cb2118.456758","78e6c1ef.f96a28"]]},{"id":"491b5325.96e04c","type":"redis-out","z":"3ca7bb40.2d0a8c","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2440,"y":20,"wires":[]},{"id":"6a5afc29.862a04","type":"redis-out","z":"3ca7bb40.2d0a8c","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2500,"y":540,"wires":[]},{"id":"9ca9d1dd.86c8e8","type":"redis-out","z":"3ca7bb40.2d0a8c","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2560,"y":900,"wires":[]},{"id":"48e2e4ee.3946c4","type":"redis-out","z":"3ca7bb40.2d0a8c","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2300,"y":1380,"wires":[]},{"id":"3b9af867.e424c8","type":"redis-out","z":"3ca7bb40.2d0a8c","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2280,"y":1620,"wires":[]},{"id":"78e6c1ef.f96a28","type":"redis-out","z":"3ca7bb40.2d0a8c","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":2260,"y":1780,"wires":[]},{"id":"6e740b0f.d6a34c","type":"switch","z":"3ca7bb40.2d0a8c","name":"Check Payload Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordProductCreate","vt":"str"},{"t":"eq","v":"SendRecordProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":900,"y":620,"wires":[["3e14ab8.e1a5054"],["3e14ab8.e1a5054"],["329ce82d.82144"],["8315a5de.f205e"],["3e14ab8.e1a5054"],["cabdcc47.cb724"]]},{"id":"ee2f50e0.357de","type":"switch","z":"3ca7bb40.2d0a8c","name":"Check Created Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordReplyProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordReplyProductCreate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":820,"y":1680,"wires":[["9a20ccfd.a724d"],["9a20ccfd.a724d"],["2beb4828.954b78"],["211e5408.b117a4"],["9a20ccfd.a724d"],["8c32bbdc.03c32"]]},{"id":"f6e6f6db.bf6ca8","type":"debug","z":"3ca7bb40.2d0a8c","name":"Display Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":700,"y":500,"wires":[]},{"id":"fefee6b4.2ac3e8","type":"MSSQL","z":"3ca7bb40.2d0a8c","mssqlCN":"f04213fa.c22b48","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[MsgMo] where UID=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1660,"y":1900,"wires":[["236aee73.a1895a"]]},{"id":"cabdcc47.cb724","type":"nats-streaming-acknowledge","z":"3ca7bb40.2d0a8c","name":"STAN ACK","x":1270,"y":760,"wires":[]},{"id":"8c32bbdc.03c32","type":"nats-streaming-acknowledge","z":"3ca7bb40.2d0a8c","name":"","x":1180,"y":1800,"wires":[]},{"id":"579098be.5e13f8","type":"debug","z":"3ca7bb40.2d0a8c","name":"Display Payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":720,"y":1500,"wires":[]},{"id":"6c7ce502.53f454","type":"comment","z":"3ca7bb40.2d0a8c","name":"SI_SinoPacBankMsgInfo","info":"","x":230,"y":680,"wires":[]},{"id":"ba62a8d6.d738a","type":"comment","z":"3ca7bb40.2d0a8c","name":"MsgMo","info":"","x":290,"y":1720,"wires":[]},{"id":"3666e5a6.39866a","type":"MSSQL","z":"3ca7bb40.2d0a8c","mssqlCN":"f04213fa.c22b48","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[MsgMo] \nSET    SerialNo = @uid, \n       ReceiveTime = Replace(Replace(Replace(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120), ':', ''), '-', ''), ' ', ''), \n       MID = @MID, \n       DestNo = @DestNo,\n       MsgData = @MsgData \nWHERE  UID = @uid ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"DateTime","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"VarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1660,"y":1680,"wires":[["adf54ddb.0f4168"]]},{"id":"64941982.9705a","type":"MSSQL","z":"1bd17114.208f7f","mssqlCN":"35b0806c.4ac0e8","name":"Report Send Table MSSQL","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[send] \n            (uid, \n             event_code, \n             way_name, \n             send_from, \n             send_date, \n             template_code, \n             template_max_length, \n             send_mode, \n             limit_mode, \n             mod_reply, \n             status, \n             priority, \n             msg_type, \n             req_channel, \n             req_batch_id, \n             memo, \n             create_time, \n             create_user, \n             update_time, \n             update_user, \n             completed_time, \n             canceled_time, \n             update_expired_time) \nVALUES     (@uid, \n            @event_code, \n            @way_name, \n            @send_from, \n            @send_date,\n            @template_code, \n            @template_max_length, \n            @send_mode, \n            @limit_mode, \n            @mod_reply, \n            @status, \n            @priority, \n            @msg_type, \n            @req_channel, \n            @req_batch_id, \n            @memo, \n            @create_time, \n            @create_user, \n            @update_time, \n            @update_user, \n            @completed_time, \n            @canceled_time, \n            @update_expired_time) ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"event_code","type":"VarChar(?)","valueType":"msg","value":"payload.event_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_from","type":"Int","valueType":"msg","value":"payload.send_from","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_date","type":"DateTime2","valueType":"msg","value":"payload.send_date","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"template_code","type":"VarChar(?)","valueType":"msg","value":"payload.template_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"template_max_length","type":"Int","valueType":"msg","value":"payload.template_max_length","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_mode","type":"Char","valueType":"msg","value":"payload.send_mode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"limit_mode","type":"TinyInt","valueType":"msg","value":"payload.limit_mode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"mod_reply","type":"TinyInt","valueType":"msg","value":"payload.mod_reply","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"priority","type":"Int","valueType":"msg","value":"payload.priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_type","type":"VarChar(?)","valueType":"msg","value":"payload.msg_type","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_channel","type":"VarChar(?)","valueType":"msg","value":"payload.req_channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_batch_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_batch_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"memo","type":"NVarChar(?)","valueType":"msg","value":"payload.memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_user","type":"VarChar(?)","valueType":"msg","value":"payload.create_user","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_user","type":"VarChar(?)","valueType":"msg","value":"payload.update_user","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"completed_time","type":"DateTime2","valueType":"msg","value":"payload.completed_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1740,"y":380,"wires":[["952578f0.3398c8","c3ab2c7f.c0e76"]]},{"id":"8c139bb.ad08168","type":"debug","z":"1bd17114.208f7f","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":1900,"y":1460,"wires":[]},{"id":"c276462d.16174","type":"MSSQL","z":"1bd17114.208f7f","mssqlCN":"35b0806c.4ac0e8","name":"Report SendRecord MSSQL","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[send_record] \n        (uid, \n         send_uid, \n         way_name, \n         serial_number, \n         send_time, \n         expire_time, \n         customer_id, \n         customer_phone, \n         customer_reference, \n         req_group_id, \n         req_uid, \n         req_department, \n         req_bu, \n         req_company, \n         req_object_id, \n         content, \n         return_code, \n         calc_section, \n         sending_section, \n         section, \n         success_section, \n         failure_section, \n         section_status_list, \n         is_long, \n         is_international, \n         msg_id, \n         actual_send_time, \n         actual_send_phone, \n         gateway_id, \n         status, \n         resp_code, \n         origin_resp_code,\n         gwrecvat, \n         acceptat, \n         sendat, \n         finish_time, \n         meta, \n         create_time, \n         update_time, \n         deliver_time, \n         dr_time, \n         canceled_time, \n         update_expired_time) \nVALUES     (@uid, \n        @send_uid, \n        @way_name, \n        @serial_number, \n        @send_time, \n        @expire_time, \n        @customer_id, \n        @customer_phone, \n        @customer_reference, \n        @req_group_id, \n        @req_uid, \n        @req_department, \n        @req_bu, \n        @req_company, \n        @req_object_id, \n        @content, \n        @return_code, \n        @calc_section, \n        @sending_section, \n        @section, \n        @success_section, \n        @failure_section, \n        @section_status_list, \n        @is_long, \n        @is_international, \n        @msg_id, \n        @actual_send_time, \n        @actual_send_phone, \n        @gateway_id, \n        @status, \n        @resp_code, \n        @origin_resp_code,\n        @gwrecvat, \n        @acceptat, \n        @sendat, \n        @finish_time, \n        @meta, \n        @create_time, \n        @update_time, \n        @deliver_time, \n        @dr_time, \n        @canceled_time, \n        @update_expired_time) \n\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"serial_number","type":"Int","valueType":"msg","value":"payload.serial_number","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_time","type":"DateTime2","valueType":"msg","value":"payload.send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"expire_time","type":"DateTime2","valueType":"msg","value":"payload.expire_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"NVarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_group_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_group_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_uid","type":"VarChar(?)","valueType":"msg","value":"payload.req_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"content","type":"NVarChar(?)","valueType":"msg","value":"payload.content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"calc_section","type":"TinyInt","valueType":"msg","value":"payload.calc_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sending_section","type":"TinyInt","valueType":"msg","value":"payload.sending_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section","type":"TinyInt","valueType":"msg","value":"payload.section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"success_section","type":"TinyInt","valueType":"msg","value":"payload.success_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"failure_section","type":"TinyInt","valueType":"msg","value":"payload.failure_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section_status_list","type":"VarChar(?)","valueType":"msg","value":"payload.section_status_list","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_long","type":"TinyInt","valueType":"msg","value":"payload.is_long","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_international","type":"TinyInt","valueType":"msg","value":"payload.is_international","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_id","type":"VarChar(?)","valueType":"msg","value":"payload.msg_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_time","type":"DateTime2","valueType":"msg","value":"payload.actual_send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_phone","type":"VarChar(?)","valueType":"msg","value":"payload.actual_send_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gwrecvat","type":"VarChar(?)","valueType":"msg","value":"payload.gwrecvat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"acceptat","type":"VarChar(?)","valueType":"msg","value":"payload.acceptat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sendat","type":"VarChar(?)","valueType":"msg","value":"payload.sendat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"finish_time","type":"DateTime2","valueType":"msg","value":"payload.finish_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"meta","type":"NVarChar(?)","valueType":"msg","value":"payload.meta","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"deliver_time","type":"DateTime2","valueType":"msg","value":"payload.deliver_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"dr_time","type":"DateTime2","valueType":"msg","value":"payload.dr_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"origin_resp_code","type":"int","valueType":"msg","value":"payload.origin_resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_department","type":"VarChar(?)","valueType":"msg","value":"payload.req_department","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_bu","type":"VarChar(?)","valueType":"msg","value":"payload.req_bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_company","type":"VarChar(?)","valueType":"msg","value":"payload.req_company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_object_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_object_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1600,"y":1560,"wires":[["5407e150.bcefb8","8c139bb.ad08168"]]},{"id":"888bff7b.8a8158","type":"MSSQL","z":"3ca7bb40.2d0a8c","mssqlCN":"df7cc988.0601c8","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"\n SELECT send_record.uid                                                                                                                    AS UID,\n        send_record.serial_number                                                                                                          AS SerialNum,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GUID,\n        send_record.customer_phone                                                                                                         AS MPhoneNum,\n        send_record.content                                                                                                                AS MsgData,\n        send.priority                                                                                                                      AS Priority,\n        CAST(send_record.send_time AS DATETIME)                                                                                            AS BookingTime,\n        send_record.req_department                                                                                                         AS DepID,\n        send.msg_type                                                                                                                      AS MsgType,\n        send.memo                                                                                                                          AS Memo,\n        send_record.customer_id                                                                                                            AS SenderID,\n        send_record.req_bu                                                                                                                 AS Bu,\n        send_record.req_company                                                                                                            AS Company,\n        send.req_channel                                                                                                                   AS Channel,\n        send_record.customer_reference                                                                                                     AS REFERENCE,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GroupID,\n        substring(CONVERT(VARCHAR(36), send.create_user), 1, 20)                                                                           AS UserName,\n        ''                                                                                                                                 AS SourceType,\n        send_record.req_object_id                                                                                                          AS ObjectID,\n        CONVERT(VARCHAR(36), send_record.uid)                                                                                              AS SerialNo,\n        send_record.customer_phone                                                                                                         AS DestNo,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS DestName,\n        send_record.req_department                                                                                                         AS DestCategory,\n        ''                                                                                                                                 AS OrderID,\n        ''                                                                                                                                 AS MID,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.actual_send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14) AS SubmitTime, \n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14)        AS OrderTime, \n        CAST(send_record.expire_time AS DATETIME)                                                                                          AS ExpireTime, \n        send_record.resp_code                                                                                                              AS StatusFlag,\n        ''                                                                                                                                 AS SubmitFlag,\n        ''                                                                                                                                 AS Filler,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.dr_time AS DATETIME ),20),':',''),'-',''),' ',''),1,14)         AS StatusTime, \n        send.req_batch_id                                                                                                                  AS BatchCode\n FROM   [dbo].[send_record]                                                                                                    AS send_record,\n        [dbo].[send]                                                                                                           AS send\n WHERE  send_record.uid = @uid \n AND    send_record.send_uid = send.uid\n \n ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"serial_number","type":"Int","valueType":"msg","value":"payload.serial_number","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_time","type":"DateTime2","valueType":"msg","value":"payload.send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"expire_time","type":"DateTime2","valueType":"msg","value":"payload.expire_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"NVarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_group_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_group_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_uid","type":"VarChar(?)","valueType":"msg","value":"payload.req_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"content","type":"NVarChar(?)","valueType":"msg","value":"payload.content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"calc_section","type":"TinyInt","valueType":"msg","value":"payload.calc_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sending_section","type":"TinyInt","valueType":"msg","value":"payload.sending_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section","type":"TinyInt","valueType":"msg","value":"payload.section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"success_section","type":"TinyInt","valueType":"msg","value":"payload.success_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"failure_section","type":"TinyInt","valueType":"msg","value":"payload.failure_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section_status_list","type":"VarChar(?)","valueType":"msg","value":"payload.section_status_list","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_long","type":"TinyInt","valueType":"msg","value":"payload.is_long","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_international","type":"TinyInt","valueType":"msg","value":"payload.is_international","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_id","type":"VarChar(?)","valueType":"msg","value":"payload.msg_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_time","type":"DateTime2","valueType":"msg","value":"payload.actual_send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_phone","type":"VarChar(?)","valueType":"msg","value":"payload.actual_send_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"origin_resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.origin_resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gwrecvat","type":"VarChar(?)","valueType":"msg","value":"payload.gwrecvat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"acceptat","type":"VarChar(?)","valueType":"msg","value":"payload.acceptat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sendat","type":"VarChar(?)","valueType":"msg","value":"payload.sendat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"finish_time","type":"DateTime2","valueType":"msg","value":"payload.finish_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"meta","type":"NVarChar(?)","valueType":"msg","value":"payload.meta","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"deliver_time","type":"DateTime2","valueType":"msg","value":"payload.deliver_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"dr_time","type":"DateTime2","valueType":"msg","value":"payload.dr_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1850,"y":200,"wires":[["8d857ec8.ff6638"]]},{"id":"8d857ec8.ff6638","type":"function","z":"3ca7bb40.2d0a8c","name":"","func":"if (msg.payload.length >= 1) {\n   msg.payload = msg.payload[0]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2090,"y":320,"wires":[["429375bf.4b69a4","d4514052.c1ff5"]]},{"id":"429375bf.4b69a4","type":"MSSQL","z":"3ca7bb40.2d0a8c","mssqlCN":"f04213fa.c22b48","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[SI_SinoPacBankMsgInfo]\n    (UID,\n    SerialNum,\n    GUID,\n    MPhoneNum,\n    MsgData,\n    Priority,\n    BookingTime,\n    DepID,\n    MsgType,\n    Memo,\n    SenderID,\n    Bu,\n    Company,\n    Channel,\n    Reference,\n    GroupID,\n    UserName,\n    SourceType,\n    ObjectID,\n    SerialNo,\n    DestNo,\n    DestName,\n    DestCategory,\n    OrderID,\n    MID,\n    SubmitTime,\n    OrderTime,\n    ExpireTime,\n    StatusFlag,\n    SubmitFlag,\n    Filler,\n    StatusTime,\n    BatchCode)\nVALUES(\n        @UID,\n        @SerialNum,\n        @GUID,\n        @MPhoneNum,\n        @MsgData,\n        @Priority,\n        @BookingTime,\n        @DepID,\n        @MsgType,\n        @Memo,\n        @SenderID,\n        @Bu,\n        @Company,\n        @Channel,\n        @Reference,\n        @GroupID,\n        @UserName,\n        @SourceType,\n        @ObjectID,\n        @SerialNo,\n        @DestNo,\n        @DestName,\n        @DestCategory,\n        @OrderID,\n        @MID,\n        @SubmitTime,\n        @OrderTime,\n        @ExpireTime,\n        @StatusFlag,\n        @SubmitFlag,\n        @Filler,\n        @StatusTime,\n        @BatchCode)\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.UID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNum","type":"Int","valueType":"msg","value":"payload.SerialNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GUID","type":"VarChar(?)","valueType":"msg","value":"payload.GUID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MPhoneNum","type":"VarChar(?)","valueType":"msg","value":"payload.MPhoneNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.MsgData","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Priority","type":"TinyInt","valueType":"msg","value":"payload.Priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BookingTime","type":"DateTime2","valueType":"msg","value":"payload.BookingTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DepID","type":"VarChar(?)","valueType":"msg","value":"payload.DepID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgType","type":"VarChar(?)","valueType":"msg","value":"payload.MsgType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Memo","type":"VarChar(?)","valueType":"msg","value":"payload.Memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SenderID","type":"VarChar(?)","valueType":"msg","value":"payload.SenderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Bu","type":"VarChar(?)","valueType":"msg","value":"payload.Bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Company","type":"VarChar(?)","valueType":"msg","value":"payload.Company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Channel","type":"VarChar(?)","valueType":"msg","value":"payload.Channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Reference","type":"VarChar(?)","valueType":"msg","value":"payload.Reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GroupID","type":"VarChar(?)","valueType":"msg","value":"payload.GroupID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"UserName","type":"VarChar(?)","valueType":"msg","value":"payload.UserName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SourceType","type":"VarChar(?)","valueType":"msg","value":"payload.SourceType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ObjectID","type":"VarChar(?)","valueType":"msg","value":"payload.ObjectID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.SerialNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.DestNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestName","type":"VarChar(?)","valueType":"msg","value":"payload.DestName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestCategory","type":"VarChar(?)","valueType":"msg","value":"payload.DestCategory","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderID","type":"VarChar(?)","valueType":"msg","value":"payload.OrderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.MID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitTime","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderTime","type":"VarChar(?)","valueType":"msg","value":"payload.OrderTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ExpireTime","type":"DateTime","valueType":"msg","value":"payload.ExpireTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusFlag","type":"VarChar(?)","valueType":"msg","value":"payload.StatusFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitFlag","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Filler","type":"VarChar(?)","valueType":"msg","value":"payload.Filler","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusTime","type":"VarChar(?)","valueType":"msg","value":"payload.StatusTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BatchCode","type":"VarChar(?)","valueType":"msg","value":"payload.BatchCode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2290,"y":240,"wires":[["2cc8879d.d09c4"]]},{"id":"d4514052.c1ff5","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2380,"y":320,"wires":[]},{"id":"5caad886.d8dab","type":"MSSQL","z":"6d95478a.67aeb","mssqlCN":"35b0806c.4ac0e8","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[MsgMo] \n            (UID, \n             SerialNo, \n             ReceiveTime, \n             MID, \n             DestNo, \n             MsgData) \nvalues     (@UID, \n            @SerialNo, \n            REPLACE(REPLACE(REPLACE(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120),':',''),'-',''),' ',''), \n            @MID, \n            @DestNo, \n            @MsgData) ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1860,"y":2920,"wires":[["ba9fb29a.97de9"]]},{"id":"f12a7f78.b8069","type":"MSSQL","z":"3ca7bb40.2d0a8c","mssqlCN":"f04213fa.c22b48","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[MsgMo] \n           (\n             SerialNo, \n             ReceiveTime, \n             MID, \n             DestNo, \n             MsgData) \n             \nvalues     (@SerialNo, \n            REPLACE(REPLACE(REPLACE(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120),':',''),'-',''),' ',''), \n            @MID, \n            @DestNo, \n            @MsgData) ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"VarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1640,"y":1480,"wires":[["3a8e5bbf.b1be2c"]]},{"id":"d5419f14.a82828","type":"MSSQL","z":"3ca7bb40.2d0a8c","mssqlCN":"f04213fa.c22b48","name":"Update SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[SI_SinoPacBankMsgInfo]\nSET     SerialNum = @SerialNum,\n        MPhoneNum=@MPhoneNum ,\n        MsgData=@MsgData ,\n        Priority=@Priority,\n        BookingTime=@BookingTime ,\n        DepID=@DepID ,\n        MsgType=@MsgType,\n        Memo=@Memo ,\n        SenderID=@SenderID ,\n        Bu=@Bu ,\n        Company=@Company ,\n        Channel=@Channel ,\n        Reference=@Reference ,\n        GroupID=@GroupID ,\n        UserName=@UserName ,\n        SourceType=@SourceType ,\n        ObjectID=@ObjectID ,\n        SerialNo=@SerialNo,\n        DestNo=@DestNo ,\n        DestCategory=@DestCategory,\n        OrderID=@OrderID ,\n        MID=@MID ,\n        SubmitTime=@SubmitTime,\n        OrderTime=@OrderTime,\n        ExpireTime=@ExpireTime ,\n        StatusFlag=@StatusFlag ,\n        SubmitFlag=@SubmitFlag,\n        Filler=@Filler ,\n        StatusTime=@StatusTime,\n        BatchCode=@BatchCode\nWHERE UID=@uid\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.UID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNum","type":"Int","valueType":"msg","value":"payload.SerialNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GUID","type":"VarChar(?)","valueType":"msg","value":"payload.GUID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MPhoneNum","type":"VarChar(?)","valueType":"msg","value":"payload.MPhoneNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.MsgData","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Priority","type":"TinyInt","valueType":"msg","value":"payload.Priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BookingTime","type":"DateTime2","valueType":"msg","value":"payload.BookingTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DepID","type":"VarChar(?)","valueType":"msg","value":"payload.DepID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgType","type":"VarChar(?)","valueType":"msg","value":"payload.MsgType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Memo","type":"VarChar(?)","valueType":"msg","value":"payload.Memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SenderID","type":"VarChar(?)","valueType":"msg","value":"payload.SenderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Bu","type":"VarChar(?)","valueType":"msg","value":"payload.Bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Company","type":"VarChar(?)","valueType":"msg","value":"payload.Company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Channel","type":"VarChar(?)","valueType":"msg","value":"payload.Channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Reference","type":"VarChar(?)","valueType":"msg","value":"payload.Reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GroupID","type":"VarChar(?)","valueType":"msg","value":"payload.GroupID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"UserName","type":"VarChar(?)","valueType":"msg","value":"payload.UserName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SourceType","type":"VarChar(?)","valueType":"msg","value":"payload.SourceType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ObjectID","type":"VarChar(?)","valueType":"msg","value":"payload.ObjectID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.SerialNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.DestNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestName","type":"VarChar(?)","valueType":"msg","value":"payload.DestName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestCategory","type":"VarChar(?)","valueType":"msg","value":"payload.DestCategory","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderID","type":"VarChar(?)","valueType":"msg","value":"payload.OrderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.MID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitTime","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderTime","type":"VarChar(?)","valueType":"msg","value":"payload.OrderTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ExpireTime","type":"DateTime","valueType":"msg","value":"payload.ExpireTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusFlag","type":"VarChar(?)","valueType":"msg","value":"payload.StatusFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitFlag","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Filler","type":"VarChar(?)","valueType":"msg","value":"payload.Filler","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusTime","type":"VarChar(?)","valueType":"msg","value":"payload.StatusTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BatchCode","type":"VarChar(?)","valueType":"msg","value":"payload.BatchCode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2440,"y":720,"wires":[["1401b077.27d1b8"]]},{"id":"debc36ed.a65ff","type":"function","z":"3ca7bb40.2d0a8c","name":"","func":"if (msg.payload.length >= 1) {\n   msg.payload = msg.payload[0]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2170,"y":720,"wires":[["d5419f14.a82828"]]},{"id":"1e1d1091.5d6277","type":"debug","z":"3ca7bb40.2d0a8c","name":"Debug Send Record Table","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2220,"y":500,"wires":[]},{"id":"e5c1b398.03402","type":"nats-streaming-subscribe","z":"3ca7bb40.2d0a8c","name":"Send Record Product","server":"81898769.b5aff8","channel":"rowData.source.SendRecordProduct","clientID":"cache1-0001","start":"all","start_option":"","durable":true,"durable_name":"cache1-0001","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":200,"y":620,"wires":[["331ba220.f90f0e"]]},{"id":"c27b0872.aec1a8","type":"MSSQL","z":"3ca7bb40.2d0a8c","mssqlCN":"df7cc988.0601c8","name":"Update Report SI_SinoPacBankMsgInfo","outField":"payload","returnType":"0","throwErrors":"0","query":"SELECT send_record.uid as UID ,\n    send_record.serial_number as SerialNum ,\n    convert(varchar(36), send_record.req_uid) as GUID,\n    send_record.customer_phone as MPhoneNum,\n    send_record.content as MsgData ,\n    send.priority as Priority,\n    send_record.send_time as BookingTime,\n    send_record.req_department as DepID,\n    send.msg_type as MsgType,\n    send.memo as Memo,\n    send_record.customer_id as SenderID,\n    send_record.req_bu as Bu,\n    send_record.req_company as Company,\n    send.req_channel as Channel,\n    send_record.customer_reference Reference,\n    convert(varchar(36), send_record.req_uid) as GroupID,\n    Substring(convert(varchar(36), send.create_user), 1, 20) as UserName ,\n    '' as SourceType ,\n    send_record.req_object_id as ObjectID,\n    convert(varchar(36), send_record.uid) as  SerialNo ,\n    send_record.customer_phone as DestNo,\n    convert(varchar(36), send_record.req_uid) as DestName,\n    send_record.req_department as DestCategory,\n    '' as OrderID,\n    '' as MID,\n    substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,cast(send_record.actual_send_time as datetime),20),':',''),'-',''),' ',''),1,14) as SubmitTime,\n    substring(replace(replace(replace(convert(varchar,cast(send_record.send_time as datetime),20),':',''),'-',''),' ',''),1,14) as OrderTime,\n    cast(send_record.expire_time as datetime) as ExpireTime,\n    send_record.resp_code as StatusFlag,\n    '' as SubmitFlag,\n    '' as Filler,\n    substring(replace(replace(replace(convert(varchar,cast(send_record.dr_time as datetime),20),':',''),'-',''),' ',''),1,14) as StatusTime,\n    send.req_batch_id as BatchCode\nFROM [NBPKernel].[dbo].[send_record] as send_record,\n    [NBPKernel].[dbo].[send] as send\nWHERE  send_record.uid = @uid\n    AND send_record.send_uid = send.uid\n\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1920,"y":620,"wires":[["debc36ed.a65ff","1e1d1091.5d6277"]]},{"id":"6e83c597.3c7d04","type":"MSSQL","z":"1bd17114.208f7f","mssqlCN":"35b0806c.4ac0e8","name":"Report SendRecordReply MSSQL","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[send_record_reply] \nSET    send_record_uid = @send_record_uid, \n       customer_id = @customer_id, \n       customer_phone = @customer_phone, \n       customer_reference = @customer_reference, \n       tx_date = @tx_date, \n       tx_time = @tx_time, \n       event_code = @event_code, \n       return_code = @return_code, \n       create_time = @create_time, \n       update_time = @update_time, \n       reply_content = @reply_content, \n       reply_time = @reply_time, \n       status = @status, \n       gateway_id = @gateway_id, \n       code = @code \nWHERE  uid = @uid\n\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_record_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_record_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"NVarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"tx_date","type":"VarChar(?)","valueType":"msg","value":"payload.tx_date","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"tx_time","type":"VarChar(?)","valueType":"msg","value":"payload.tx_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"event_code","type":"VarChar(?)","valueType":"msg","value":"payload.event_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"reply_content","type":"NVarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"reply_time","type":"DateTime2","valueType":"msg","value":"payload.reply_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"TinyInt","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"code","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":1480,"y":2800,"wires":[["7a650079.7ce23","50fa6f0c.a3326"]]},{"id":"d2258588.a577f","type":"nats-streaming-subscribe","z":"2629ed0c.d1be12","name":"SendRecordReplyProduct","server":"81898769.b5aff8","channel":"rowData.source.SendRecordReplyProduct","clientID":"cache2-0002","start":"all","start_option":"","durable":true,"durable_name":"cache2-0002","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":2230,"y":1700,"wires":[["30c6b366.a16e4c"]]},{"id":"30c6b366.a16e4c","type":"json","z":"2629ed0c.d1be12","name":"","property":"payload","action":"","pretty":false,"x":2510,"y":1700,"wires":[["fd175e41.1ff01","4b62834.48325fc"]]},{"id":"99f3b175.67f518","type":"json","z":"2629ed0c.d1be12","name":"","property":"payload","action":"","pretty":false,"x":2470,"y":640,"wires":[["2b57113e.ca947e","2ca79025.63d7d8"]]},{"id":"bcea4f8f.c2bef","type":"function","z":"2629ed0c.d1be12","name":"Convert Insert SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3450,"y":260,"wires":[["51d28d1b.d18374","76b21d75.722444"]]},{"id":"51d28d1b.d18374","type":"debug","z":"2629ed0c.d1be12","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":3760,"y":160,"wires":[]},{"id":"bce6811b.ca01a8","type":"debug","z":"2629ed0c.d1be12","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":4610,"y":60,"wires":[]},{"id":"15fb2d12.5b2b33","type":"switch","z":"2629ed0c.d1be12","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":4360,"y":120,"wires":[["bce6811b.ca01a8","3514995b.cd0086"],[]]},{"id":"3514995b.cd0086","type":"nats-streaming-acknowledge","z":"2629ed0c.d1be12","name":"STAN ACK","x":4590,"y":120,"wires":[]},{"id":"877868b6.65a1b8","type":"function","z":"2629ed0c.d1be12","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_reply_table_uid\n\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":4100,"y":120,"wires":[["15fb2d12.5b2b33","2d45cf66.ba82e"]]},{"id":"af425c53.e7416","type":"function","z":"2629ed0c.d1be12","name":"Convert Update SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_reply_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3490,"y":640,"wires":[["47faa0b.05e516","c297deff.741328"]]},{"id":"47faa0b.05e516","type":"debug","z":"2629ed0c.d1be12","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":3800,"y":540,"wires":[]},{"id":"f5b23ee4.cb736","type":"debug","z":"2629ed0c.d1be12","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":4670,"y":580,"wires":[]},{"id":"8bb163a3.7c361","type":"switch","z":"2629ed0c.d1be12","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":4420,"y":640,"wires":[["f5b23ee4.cb736","931dbf10.f99218"],[]]},{"id":"931dbf10.f99218","type":"nats-streaming-acknowledge","z":"2629ed0c.d1be12","name":"STAN ACK","x":4650,"y":640,"wires":[]},{"id":"b4f5725f.cef5a8","type":"function","z":"2629ed0c.d1be12","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report MsgMO for Success, UID:\" + msg.send_record_reply_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DBMsgMO table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":4200,"y":640,"wires":[["8bb163a3.7c361","eb20c1ff.37ce58"]]},{"id":"30d337b8.22c31","type":"function","z":"2629ed0c.d1be12","name":"Convert Delete SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\n// msg.payload.send_time = convert_datetime(msg.payload.send_time)\n// msg.payload.expire_time = convert_datetime(msg.payload.expire_time)\n// msg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\n// msg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\n// msg.payload.dr_time = convert_datetime(msg.payload.dr_time)\n// msg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\n// msg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3550,"y":980,"wires":[["ac0dc6dd.cae678","2a02594a.5d13ee"]]},{"id":"ac0dc6dd.cae678","type":"debug","z":"2629ed0c.d1be12","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":3840,"y":900,"wires":[]},{"id":"2a02594a.5d13ee","type":"MSSQL","z":"2629ed0c.d1be12","mssqlCN":"f04213fa.c22b48","name":"Delete SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[SI_SinoPacBankMsgInfo] where uid=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3850,"y":980,"wires":[["86253f57.a2e45"]]},{"id":"d0949a88.a16328","type":"debug","z":"2629ed0c.d1be12","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":4750,"y":920,"wires":[]},{"id":"93790227.eb41f8","type":"switch","z":"2629ed0c.d1be12","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":4500,"y":980,"wires":[["d0949a88.a16328","f7ba42f9.ef75f8"],[]]},{"id":"f7ba42f9.ef75f8","type":"nats-streaming-acknowledge","z":"2629ed0c.d1be12","name":"STAN ACK","x":4730,"y":980,"wires":[]},{"id":"86253f57.a2e45","type":"function","z":"2629ed0c.d1be12","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_reply_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":4240,"y":980,"wires":[["93790227.eb41f8","49a92db2.4ead6c"]]},{"id":"15323b6c.230815","type":"function","z":"2629ed0c.d1be12","name":"Convert Insert SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3280,"y":1500,"wires":[["5b219d5d.918a7c","4e2a9cef.793ca4"]]},{"id":"5b219d5d.918a7c","type":"debug","z":"2629ed0c.d1be12","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":3600,"y":1400,"wires":[]},{"id":"223e4bf0.8137cc","type":"debug","z":"2629ed0c.d1be12","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":4490,"y":1440,"wires":[]},{"id":"9c95a205.a6512","type":"switch","z":"2629ed0c.d1be12","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":4240,"y":1500,"wires":[["223e4bf0.8137cc","8237d0f3.9dcc08"],[]]},{"id":"24631e40.aa241a","type":"debug","z":"2629ed0c.d1be12","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":3960,"y":1400,"wires":[]},{"id":"8237d0f3.9dcc08","type":"nats-streaming-acknowledge","z":"2629ed0c.d1be12","name":"STAN ACK","x":4470,"y":1500,"wires":[]},{"id":"7e6086e9.a260e8","type":"function","z":"2629ed0c.d1be12","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"Insert Report DB MsgMo for Success, UID:\" + msg.send_record_reply_uid \n} else {\n    msg.result = \"Insert Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3980,"y":1500,"wires":[["9c95a205.a6512","eea8239.65b1fe"]]},{"id":"73326f6e.1adb4","type":"function","z":"2629ed0c.d1be12","name":"Convert Update SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3290,"y":1700,"wires":[["cb2484e1.bb1ab","644449c0.6b0638"]]},{"id":"cb2484e1.bb1ab","type":"debug","z":"2629ed0c.d1be12","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":3600,"y":1600,"wires":[]},{"id":"e2e53ef.66ae1c","type":"debug","z":"2629ed0c.d1be12","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":4450,"y":1640,"wires":[]},{"id":"b428da51.13dc08","type":"switch","z":"2629ed0c.d1be12","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":4200,"y":1700,"wires":[["e2e53ef.66ae1c","7206e199.7c01a"],[]]},{"id":"fe2034e3.bf6c9","type":"debug","z":"2629ed0c.d1be12","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":3940,"y":1600,"wires":[]},{"id":"7206e199.7c01a","type":"nats-streaming-acknowledge","z":"2629ed0c.d1be12","name":"STAN ACK","x":4430,"y":1700,"wires":[]},{"id":"7449a18d.f9a","type":"function","z":"2629ed0c.d1be12","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3940,"y":1700,"wires":[["b428da51.13dc08","b391367f.9c91c"]]},{"id":"cd8f29b8.ac1848","type":"function","z":"2629ed0c.d1be12","name":"Convert Delete SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3290,"y":1900,"wires":[["38d02d12.73981a","feccb33.ce7935"]]},{"id":"38d02d12.73981a","type":"debug","z":"2629ed0c.d1be12","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":3600,"y":1800,"wires":[]},{"id":"f01b111d.3d7538","type":"debug","z":"2629ed0c.d1be12","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":4490,"y":1840,"wires":[]},{"id":"610afabf.234ddc","type":"switch","z":"2629ed0c.d1be12","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":4240,"y":1900,"wires":[["f01b111d.3d7538","3d7bdc64.0e83ec"],[]]},{"id":"ff644181.fc89d8","type":"debug","z":"2629ed0c.d1be12","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":3920,"y":1800,"wires":[]},{"id":"3d7bdc64.0e83ec","type":"nats-streaming-acknowledge","z":"2629ed0c.d1be12","name":"STAN ACK","x":4470,"y":1900,"wires":[]},{"id":"9d039d78.e777f","type":"function","z":"2629ed0c.d1be12","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3940,"y":1920,"wires":[["610afabf.234ddc","fc2f25f0.0d879"]]},{"id":"2d45cf66.ba82e","type":"redis-out","z":"2629ed0c.d1be12","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":4380,"y":40,"wires":[]},{"id":"eb20c1ff.37ce58","type":"redis-out","z":"2629ed0c.d1be12","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":4440,"y":560,"wires":[]},{"id":"49a92db2.4ead6c","type":"redis-out","z":"2629ed0c.d1be12","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":4500,"y":920,"wires":[]},{"id":"eea8239.65b1fe","type":"redis-out","z":"2629ed0c.d1be12","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":4240,"y":1400,"wires":[]},{"id":"b391367f.9c91c","type":"redis-out","z":"2629ed0c.d1be12","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":4220,"y":1640,"wires":[]},{"id":"fc2f25f0.0d879","type":"redis-out","z":"2629ed0c.d1be12","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":4200,"y":1800,"wires":[]},{"id":"2b57113e.ca947e","type":"switch","z":"2629ed0c.d1be12","name":"Check Payload Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordProductCreate","vt":"str"},{"t":"eq","v":"SendRecordProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":2840,"y":640,"wires":[["bcea4f8f.c2bef"],["bcea4f8f.c2bef"],["af425c53.e7416"],["30d337b8.22c31"],["bcea4f8f.c2bef"],["f12feb95.a5821"]]},{"id":"fd175e41.1ff01","type":"switch","z":"2629ed0c.d1be12","name":"Check Created Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordReplyProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordReplyProductCreate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":2760,"y":1700,"wires":[["15323b6c.230815"],["15323b6c.230815"],["73326f6e.1adb4"],["cd8f29b8.ac1848"],["15323b6c.230815"],["23ee6376.8c87ec"]]},{"id":"2ca79025.63d7d8","type":"debug","z":"2629ed0c.d1be12","name":"Display Payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2640,"y":520,"wires":[]},{"id":"feccb33.ce7935","type":"MSSQL","z":"2629ed0c.d1be12","mssqlCN":"c1f5db04.657d","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[MsgMo] where UID=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3600,"y":1920,"wires":[["9d039d78.e777f"]]},{"id":"f12feb95.a5821","type":"nats-streaming-acknowledge","z":"2629ed0c.d1be12","name":"STAN ACK","x":3210,"y":780,"wires":[]},{"id":"23ee6376.8c87ec","type":"nats-streaming-acknowledge","z":"2629ed0c.d1be12","name":"","x":3120,"y":1820,"wires":[]},{"id":"4b62834.48325fc","type":"debug","z":"2629ed0c.d1be12","name":"Display Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2660,"y":1520,"wires":[]},{"id":"e15331f5.9a8248","type":"comment","z":"2629ed0c.d1be12","name":"SI_SinoPacBankMsgInfo","info":"","x":2170,"y":700,"wires":[]},{"id":"be84b69c.ff0398","type":"comment","z":"2629ed0c.d1be12","name":"MsgMo","info":"","x":2230,"y":1740,"wires":[]},{"id":"644449c0.6b0638","type":"MSSQL","z":"2629ed0c.d1be12","mssqlCN":"c1f5db04.657d","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[MsgMo] \nSET    SerialNo = @uid, \n       ReceiveTime = Replace(Replace(Replace(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120), ':', ''), '-', ''), ' ', ''), \n       MID = @MID, \n       DestNo = @DestNo,\n       MsgData = @MsgData \nWHERE  UID = @uid ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"DateTime","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3600,"y":1700,"wires":[["7449a18d.f9a"]]},{"id":"76b21d75.722444","type":"MSSQL","z":"2629ed0c.d1be12","mssqlCN":"df7cc988.0601c8","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"\n SELECT send_record.uid                                                                                                                    AS UID,\n        send_record.serial_number                                                                                                          AS SerialNum,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GUID,\n        send_record.customer_phone                                                                                                         AS MPhoneNum,\n        send_record.content                                                                                                                AS MsgData,\n        send.priority                                                                                                                      AS Priority,\n        CAST(send_record.send_time AS DATETIME)                                                                                            AS BookingTime,\n        send_record.req_department                                                                                                         AS DepID,\n        send.msg_type                                                                                                                      AS MsgType,\n        send.memo                                                                                                                          AS Memo,\n        send_record.customer_id                                                                                                            AS SenderID,\n        send_record.req_bu                                                                                                                 AS Bu,\n        send_record.req_company                                                                                                            AS Company,\n        send.req_channel                                                                                                                   AS Channel,\n        send_record.customer_reference                                                                                                     AS REFERENCE,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GroupID,\n        substring(CONVERT(VARCHAR(36), send.create_user), 1, 20)                                                                           AS UserName,\n        ''                                                                                                                                 AS SourceType,\n        send_record.req_object_id                                                                                                          AS ObjectID,\n        CONVERT(VARCHAR(36), send_record.uid)                                                                                              AS SerialNo,\n        send_record.customer_phone                                                                                                         AS DestNo,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS DestName,\n        send_record.req_department                                                                                                         AS DestCategory,\n        ''                                                                                                                                 AS OrderID,\n        ''                                                                                                                                 AS MID,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.actual_send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14) AS SubmitTime, \n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14)        AS OrderTime, \n        CAST(send_record.expire_time AS DATETIME)                                                                                          AS ExpireTime, \n        send_record.resp_code                                                                                                              AS StatusFlag,\n        ''                                                                                                                                 AS SubmitFlag,\n        ''                                                                                                                                 AS Filler,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.dr_time AS DATETIME ),20),':',''),'-',''),' ',''),1,14)         AS StatusTime, \n        send.req_batch_id                                                                                                                  AS BatchCode\n FROM   [dbo].[send_record]                                                                                                    AS send_record,\n        [dbo].[send]                                                                                                           AS send\n WHERE  send_record.uid = @uid \n AND    send_record.send_uid = send.uid\n \n ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"serial_number","type":"Int","valueType":"msg","value":"payload.serial_number","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_time","type":"DateTime2","valueType":"msg","value":"payload.send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"expire_time","type":"DateTime2","valueType":"msg","value":"payload.expire_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"NVarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_group_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_group_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_uid","type":"VarChar(?)","valueType":"msg","value":"payload.req_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"content","type":"NVarChar(?)","valueType":"msg","value":"payload.content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"calc_section","type":"TinyInt","valueType":"msg","value":"payload.calc_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sending_section","type":"TinyInt","valueType":"msg","value":"payload.sending_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section","type":"TinyInt","valueType":"msg","value":"payload.section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"success_section","type":"TinyInt","valueType":"msg","value":"payload.success_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"failure_section","type":"TinyInt","valueType":"msg","value":"payload.failure_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section_status_list","type":"VarChar(?)","valueType":"msg","value":"payload.section_status_list","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_long","type":"TinyInt","valueType":"msg","value":"payload.is_long","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_international","type":"TinyInt","valueType":"msg","value":"payload.is_international","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_id","type":"VarChar(?)","valueType":"msg","value":"payload.msg_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_time","type":"DateTime2","valueType":"msg","value":"payload.actual_send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_phone","type":"VarChar(?)","valueType":"msg","value":"payload.actual_send_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"origin_resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.origin_resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gwrecvat","type":"VarChar(?)","valueType":"msg","value":"payload.gwrecvat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"acceptat","type":"VarChar(?)","valueType":"msg","value":"payload.acceptat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sendat","type":"VarChar(?)","valueType":"msg","value":"payload.sendat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"finish_time","type":"DateTime2","valueType":"msg","value":"payload.finish_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"meta","type":"NVarChar(?)","valueType":"msg","value":"payload.meta","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"deliver_time","type":"DateTime2","valueType":"msg","value":"payload.deliver_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"dr_time","type":"DateTime2","valueType":"msg","value":"payload.dr_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3790,"y":220,"wires":[["3252c7b4.3d6208"]]},{"id":"3252c7b4.3d6208","type":"function","z":"2629ed0c.d1be12","name":"","func":"if (msg.payload.length >= 1) {\n   msg.payload = msg.payload[0]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":4030,"y":340,"wires":[["e61ee6d0.40a07","9d90f7b7.2fe178"]]},{"id":"e61ee6d0.40a07","type":"MSSQL","z":"2629ed0c.d1be12","mssqlCN":"c1f5db04.657d","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[SI_SinoPacBankMsgInfo]\n    (UID,\n    SerialNum,\n    GUID,\n    MPhoneNum,\n    MsgData,\n    Priority,\n    BookingTime,\n    DepID,\n    MsgType,\n    Memo,\n    SenderID,\n    Bu,\n    Company,\n    Channel,\n    Reference,\n    GroupID,\n    UserName,\n    SourceType,\n    ObjectID,\n    SerialNo,\n    DestNo,\n    DestName,\n    DestCategory,\n    OrderID,\n    MID,\n    SubmitTime,\n    OrderTime,\n    ExpireTime,\n    StatusFlag,\n    SubmitFlag,\n    Filler,\n    StatusTime,\n    BatchCode)\nVALUES(\n        @UID,\n        @SerialNum,\n        @GUID,\n        @MPhoneNum,\n        @MsgData,\n        @Priority,\n        @BookingTime,\n        @DepID,\n        @MsgType,\n        @Memo,\n        @SenderID,\n        @Bu,\n        @Company,\n        @Channel,\n        @Reference,\n        @GroupID,\n        @UserName,\n        @SourceType,\n        @ObjectID,\n        @SerialNo,\n        @DestNo,\n        @DestName,\n        @DestCategory,\n        @OrderID,\n        @MID,\n        @SubmitTime,\n        @OrderTime,\n        @ExpireTime,\n        @StatusFlag,\n        @SubmitFlag,\n        @Filler,\n        @StatusTime,\n        @BatchCode)\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.UID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNum","type":"Int","valueType":"msg","value":"payload.SerialNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GUID","type":"VarChar(?)","valueType":"msg","value":"payload.GUID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MPhoneNum","type":"VarChar(?)","valueType":"msg","value":"payload.MPhoneNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.MsgData","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Priority","type":"TinyInt","valueType":"msg","value":"payload.Priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BookingTime","type":"DateTime2","valueType":"msg","value":"payload.BookingTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DepID","type":"VarChar(?)","valueType":"msg","value":"payload.DepID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgType","type":"VarChar(?)","valueType":"msg","value":"payload.MsgType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Memo","type":"VarChar(?)","valueType":"msg","value":"payload.Memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SenderID","type":"VarChar(?)","valueType":"msg","value":"payload.SenderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Bu","type":"VarChar(?)","valueType":"msg","value":"payload.Bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Company","type":"VarChar(?)","valueType":"msg","value":"payload.Company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Channel","type":"VarChar(?)","valueType":"msg","value":"payload.Channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Reference","type":"VarChar(?)","valueType":"msg","value":"payload.Reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GroupID","type":"VarChar(?)","valueType":"msg","value":"payload.GroupID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"UserName","type":"VarChar(?)","valueType":"msg","value":"payload.UserName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SourceType","type":"VarChar(?)","valueType":"msg","value":"payload.SourceType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ObjectID","type":"VarChar(?)","valueType":"msg","value":"payload.ObjectID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.SerialNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.DestNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestName","type":"VarChar(?)","valueType":"msg","value":"payload.DestName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestCategory","type":"VarChar(?)","valueType":"msg","value":"payload.DestCategory","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderID","type":"VarChar(?)","valueType":"msg","value":"payload.OrderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.MID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitTime","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderTime","type":"VarChar(?)","valueType":"msg","value":"payload.OrderTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ExpireTime","type":"DateTime","valueType":"msg","value":"payload.ExpireTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusFlag","type":"VarChar(?)","valueType":"msg","value":"payload.StatusFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitFlag","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Filler","type":"VarChar(?)","valueType":"msg","value":"payload.Filler","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusTime","type":"VarChar(?)","valueType":"msg","value":"payload.StatusTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BatchCode","type":"VarChar(?)","valueType":"msg","value":"payload.BatchCode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":4230,"y":260,"wires":[["877868b6.65a1b8"]]},{"id":"9d90f7b7.2fe178","type":"debug","z":"2629ed0c.d1be12","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":4320,"y":340,"wires":[]},{"id":"4e2a9cef.793ca4","type":"MSSQL","z":"2629ed0c.d1be12","mssqlCN":"c1f5db04.657d","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[MsgMo] \n           (\n             SerialNo, \n             ReceiveTime, \n             MID, \n             DestNo, \n             MsgData) \n             \nvalues     (@SerialNo, \n            REPLACE(REPLACE(REPLACE(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120),':',''),'-',''),' ',''), \n            @MID, \n            @DestNo, \n            @MsgData) ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3580,"y":1500,"wires":[["7e6086e9.a260e8"]]},{"id":"98af28d0.d0aed","type":"MSSQL","z":"2629ed0c.d1be12","mssqlCN":"c1f5db04.657d","name":"Update SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[SI_SinoPacBankMsgInfo]\nSET     SerialNum = @SerialNum,\n        MPhoneNum=@MPhoneNum ,\n        MsgData=@MsgData ,\n        Priority=@Priority,\n        BookingTime=@BookingTime ,\n        DepID=@DepID ,\n        MsgType=@MsgType,\n        Memo=@Memo ,\n        SenderID=@SenderID ,\n        Bu=@Bu ,\n        Company=@Company ,\n        Channel=@Channel ,\n        Reference=@Reference ,\n        GroupID=@GroupID ,\n        UserName=@UserName ,\n        SourceType=@SourceType ,\n        ObjectID=@ObjectID ,\n        SerialNo=@SerialNo,\n        DestNo=@DestNo ,\n        DestCategory=@DestCategory,\n        OrderID=@OrderID ,\n        MID=@MID ,\n        SubmitTime=@SubmitTime,\n        OrderTime=@OrderTime,\n        ExpireTime=@ExpireTime ,\n        StatusFlag=@StatusFlag ,\n        SubmitFlag=@SubmitFlag,\n        Filler=@Filler ,\n        StatusTime=@StatusTime,\n        BatchCode=@BatchCode\nWHERE UID=@uid\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.UID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNum","type":"Int","valueType":"msg","value":"payload.SerialNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GUID","type":"VarChar(?)","valueType":"msg","value":"payload.GUID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MPhoneNum","type":"VarChar(?)","valueType":"msg","value":"payload.MPhoneNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.MsgData","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Priority","type":"TinyInt","valueType":"msg","value":"payload.Priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BookingTime","type":"DateTime2","valueType":"msg","value":"payload.BookingTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DepID","type":"VarChar(?)","valueType":"msg","value":"payload.DepID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgType","type":"VarChar(?)","valueType":"msg","value":"payload.MsgType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Memo","type":"VarChar(?)","valueType":"msg","value":"payload.Memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SenderID","type":"VarChar(?)","valueType":"msg","value":"payload.SenderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Bu","type":"VarChar(?)","valueType":"msg","value":"payload.Bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Company","type":"VarChar(?)","valueType":"msg","value":"payload.Company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Channel","type":"VarChar(?)","valueType":"msg","value":"payload.Channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Reference","type":"VarChar(?)","valueType":"msg","value":"payload.Reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GroupID","type":"VarChar(?)","valueType":"msg","value":"payload.GroupID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"UserName","type":"VarChar(?)","valueType":"msg","value":"payload.UserName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SourceType","type":"VarChar(?)","valueType":"msg","value":"payload.SourceType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ObjectID","type":"VarChar(?)","valueType":"msg","value":"payload.ObjectID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.SerialNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.DestNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestName","type":"VarChar(?)","valueType":"msg","value":"payload.DestName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestCategory","type":"VarChar(?)","valueType":"msg","value":"payload.DestCategory","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderID","type":"VarChar(?)","valueType":"msg","value":"payload.OrderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.MID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitTime","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderTime","type":"VarChar(?)","valueType":"msg","value":"payload.OrderTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ExpireTime","type":"DateTime","valueType":"msg","value":"payload.ExpireTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusFlag","type":"VarChar(?)","valueType":"msg","value":"payload.StatusFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitFlag","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Filler","type":"VarChar(?)","valueType":"msg","value":"payload.Filler","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusTime","type":"VarChar(?)","valueType":"msg","value":"payload.StatusTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BatchCode","type":"VarChar(?)","valueType":"msg","value":"payload.BatchCode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":4380,"y":740,"wires":[["b4f5725f.cef5a8"]]},{"id":"c400fa69.48ec8","type":"function","z":"2629ed0c.d1be12","name":"","func":"if (msg.payload.length >= 1) {\n   msg.payload = msg.payload[0]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":4110,"y":740,"wires":[["98af28d0.d0aed"]]},{"id":"72769527.7b83e4","type":"debug","z":"2629ed0c.d1be12","name":"Debug Send Record Table","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":4160,"y":520,"wires":[]},{"id":"e0fbafa3.521aa8","type":"nats-streaming-subscribe","z":"2629ed0c.d1be12","name":"Send Record Product","server":"81898769.b5aff8","channel":"rowData.source.SendRecordProduct","clientID":"cache2-0001","start":"all","start_option":"","durable":true,"durable_name":"cache2-0001","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":2140,"y":640,"wires":[["99f3b175.67f518"]]},{"id":"c297deff.741328","type":"MSSQL","z":"2629ed0c.d1be12","mssqlCN":"df7cc988.0601c8","name":"Update Report SI_SinoPacBankMsgInfo","outField":"payload","returnType":"0","throwErrors":"0","query":"SELECT send_record.uid as UID ,\n    send_record.serial_number as SerialNum ,\n    convert(varchar(36), send_record.req_uid) as GUID,\n    send_record.customer_phone as MPhoneNum,\n    send_record.content as MsgData ,\n    send.priority as Priority,\n    send_record.send_time as BookingTime,\n    send_record.req_department as DepID,\n    send.msg_type as MsgType,\n    send.memo as Memo,\n    send_record.customer_id as SenderID,\n    send_record.req_bu as Bu,\n    send_record.req_company as Company,\n    send.req_channel as Channel,\n    send_record.customer_reference Reference,\n    convert(varchar(36), send_record.req_uid) as GroupID,\n    Substring(convert(varchar(36), send.create_user), 1, 20) as UserName ,\n    '' as SourceType ,\n    send_record.req_object_id as ObjectID,\n    convert(varchar(36), send_record.uid) as  SerialNo ,\n    send_record.customer_phone as DestNo,\n    convert(varchar(36), send_record.req_uid) as DestName,\n    send_record.req_department as DestCategory,\n    '' as OrderID,\n    '' as MID,\n    substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,cast(send_record.actual_send_time as datetime),20),':',''),'-',''),' ',''),1,14) as SubmitTime,\n    substring(replace(replace(replace(convert(varchar,cast(send_record.send_time as datetime),20),':',''),'-',''),' ',''),1,14) as OrderTime,\n    cast(send_record.expire_time as datetime) as ExpireTime,\n    send_record.resp_code as StatusFlag,\n    '' as SubmitFlag,\n    '' as Filler,\n    substring(replace(replace(replace(convert(varchar,cast(send_record.dr_time as datetime),20),':',''),'-',''),' ',''),1,14) as StatusTime,\n    send.req_batch_id as BatchCode\nFROM [NBPKernel].[dbo].[send_record] as send_record,\n    [NBPKernel].[dbo].[send] as send\nWHERE  send_record.uid = @uid\n    AND send_record.send_uid = send.uid\n\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3860,"y":640,"wires":[["c400fa69.48ec8","72769527.7b83e4"]]}]